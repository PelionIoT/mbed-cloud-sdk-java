// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.branding.adapters;

import com.arm.mbed.cloud.sdk.annotations.Internal;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.branding.model.DarkThemeImage;
import com.arm.mbed.cloud.sdk.branding.model.DarkThemeImageReference;
import com.arm.mbed.cloud.sdk.common.GenericAdapter;
import com.arm.mbed.cloud.sdk.common.TranslationUtils;
import com.arm.mbed.cloud.sdk.common.listing.ListResponse;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.model.BrandingImage;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.model.BrandingImageList;
import java.util.List;

/**
 * Adapter for dark theme images.
 */
@Preamble(description = "Adapter for dark theme images.")
@Internal
@SuppressWarnings("checkstyle:LineLength")
public final class DarkThemeImageAdapter {
    /**
     * Constructor.
     */
    private DarkThemeImageAdapter() {
        super();
        // Nothing to do;
    }

    /**
     * Maps a branding image list into a dark theme image.
     * 
     * @param toBeMapped
     *            a branding image list.
     * @return mapped list response
     */
    @Internal
    public static ListResponse<DarkThemeImage> mapList(BrandingImageList toBeMapped) {
        final BrandingImageList finalList = toBeMapped;
        final GenericAdapter.RespList<BrandingImage> respList = new GenericAdapter.RespList<BrandingImage>() {
            /**
             * Executes getAfter.
             * 
             * @return something
             */
            @Override
            public String getAfter() {
                return (finalList == null) ? null : finalList.getAfter();
            }

            /**
             * Executes getContinuationMarker.
             * 
             * @return something
             */
            @Override
            public String getContinuationMarker() {
                return null;
            }

            /**
             * Executes getData.
             * 
             * @return something
             */
            @Override
            public List<BrandingImage> getData() {
                return (finalList == null) ? null : finalList.getData();
            }

            /**
             * Executes getHasMore.
             * 
             * @return something
             */
            @Override
            public Boolean getHasMore() {
                return (finalList == null) ? null : finalList.isHasMore();
            }

            /**
             * Executes getLimit.
             * 
             * @return something
             */
            @Override
            public Integer getLimit() {
                return (finalList == null) ? null : finalList.getLimit();
            }

            /**
             * Executes getOrder.
             * 
             * @return something
             */
            @Override
            public String getOrder() {
                return (finalList == null) ? null : finalList.getOrder().toString();
            }

            /**
             * Executes getTotalCount.
             * 
             * @return something
             */
            @Override
            public Integer getTotalCount() {
                return (finalList == null) ? null : finalList.getTotalCount();
            }
        };
        return GenericAdapter.mapList(respList, DarkThemeImageAdapter.getMapper());
    }

    /**
     * Gets a mapper.
     * 
     * @return a mapper
     */
    @Internal
    public static GenericAdapter.Mapper<BrandingImageList, ListResponse<DarkThemeImage>> getListMapper() {
        return new GenericAdapter.Mapper<BrandingImageList, ListResponse<DarkThemeImage>>() {
            /**
             * Maps.
             * 
             * @param toBeMapped
             *            model to be mapped.
             * @return a mapped object
             */
            @Override
            public ListResponse<DarkThemeImage> map(BrandingImageList toBeMapped) {
                return DarkThemeImageAdapter.mapList(toBeMapped);
            }
        };
    }

    /**
     * Maps a branding image into a dark theme image.
     * 
     * @param toBeMapped
     *            a branding image.
     * @return mapped a dark theme image
     */
    @Internal
    public static DarkThemeImage map(BrandingImage toBeMapped) {
        if (toBeMapped == null) {
            return null;
        }
        final DarkThemeImage darkThemeImage = new DarkThemeImage(toBeMapped.getStaticUri(),
                                                                 TranslationUtils.toDate(toBeMapped.getUpdatedAt()));
        darkThemeImage.setReference(translateToDarkThemeImageReference(toBeMapped.getReference()));
        return darkThemeImage;
    }

    /**
     * Gets a mapper.
     * 
     * @return a mapper
     */
    @Internal
    public static GenericAdapter.Mapper<BrandingImage, DarkThemeImage> getMapper() {
        return new GenericAdapter.Mapper<BrandingImage, DarkThemeImage>() {
            /**
             * Maps.
             * 
             * @param toBeMapped
             *            model to be mapped.
             * @return a mapped object
             */
            @Override
            public DarkThemeImage map(BrandingImage toBeMapped) {
                return DarkThemeImageAdapter.map(toBeMapped);
            }
        };
    }

    /**
     * Maps the enum value.
     * 
     * @param toBeMapped
     *            a reference enum.
     * @return mapped enum value
     */
    @Internal
    @SuppressWarnings("PMD.CyclomaticComplexity")
    protected static DarkThemeImageReference
              translateToDarkThemeImageReference(BrandingImage.ReferenceEnum toBeMapped) {
        if (toBeMapped == null) {
            return DarkThemeImageReference.getUnknownEnum();
        }
        switch (toBeMapped) {
            case BRAND_LOGO_PORTRAIT:
                return DarkThemeImageReference.BRAND_LOGO_PORTRAIT;
            case BRAND_LOGO_SQUARE:
                return DarkThemeImageReference.BRAND_LOGO_SQUARE;
            case BRAND_LOGO_LANDSCAPE:
                return DarkThemeImageReference.BRAND_LOGO_LANDSCAPE;
            case BRAND_LOGO_EMAIL:
                return DarkThemeImageReference.BRAND_LOGO_EMAIL;
            case APP_LOGO_LANDSCAPE:
                return DarkThemeImageReference.APP_LOGO_LANDSCAPE;
            case APP_LOGO_PORTRAIT:
                return DarkThemeImageReference.APP_LOGO_PORTRAIT;
            case APP_LOGO_SQUARE:
                return DarkThemeImageReference.APP_LOGO_SQUARE;
            case DESKTOP_BACKGROUND_LANDSCAPE:
                return DarkThemeImageReference.DESKTOP_BACKGROUND_LANDSCAPE;
            case DESKTOP_BACKGROUND_SQUARE:
                return DarkThemeImageReference.DESKTOP_BACKGROUND_SQUARE;
            case DESKTOP_BACKGROUND_PORTRAIT:
                return DarkThemeImageReference.DESKTOP_BACKGROUND_PORTRAIT;
            case CAROUSEL_IMAGE_PORTRAIT_0:
                return DarkThemeImageReference.CAROUSEL_IMAGE_PORTRAIT_0;
            case CAROUSEL_IMAGE_PORTRAIT_1:
                return DarkThemeImageReference.CAROUSEL_IMAGE_PORTRAIT_1;
            case CAROUSEL_IMAGE_PORTRAIT_2:
                return DarkThemeImageReference.CAROUSEL_IMAGE_PORTRAIT_2;
            case CAROUSEL_IMAGE_PORTRAIT_3:
                return DarkThemeImageReference.CAROUSEL_IMAGE_PORTRAIT_3;
            case CAROUSEL_IMAGE_PORTRAIT_4:
                return DarkThemeImageReference.CAROUSEL_IMAGE_PORTRAIT_4;
            case CAROUSEL_IMAGE_PORTRAIT_5:
                return DarkThemeImageReference.CAROUSEL_IMAGE_PORTRAIT_5;
            case CAROUSEL_IMAGE_PORTRAIT_6:
                return DarkThemeImageReference.CAROUSEL_IMAGE_PORTRAIT_6;
            case CAROUSEL_IMAGE_PORTRAIT_7:
                return DarkThemeImageReference.CAROUSEL_IMAGE_PORTRAIT_7;
            case CAROUSEL_IMAGE_PORTRAIT_8:
                return DarkThemeImageReference.CAROUSEL_IMAGE_PORTRAIT_8;
            case CAROUSEL_IMAGE_PORTRAIT_9:
                return DarkThemeImageReference.CAROUSEL_IMAGE_PORTRAIT_9;
            case CAROUSEL_IMAGE_SQUARE_0:
                return DarkThemeImageReference.CAROUSEL_IMAGE_SQUARE_0;
            case CAROUSEL_IMAGE_SQUARE_1:
                return DarkThemeImageReference.CAROUSEL_IMAGE_SQUARE_1;
            case CAROUSEL_IMAGE_SQUARE_2:
                return DarkThemeImageReference.CAROUSEL_IMAGE_SQUARE_2;
            case CAROUSEL_IMAGE_SQUARE_3:
                return DarkThemeImageReference.CAROUSEL_IMAGE_SQUARE_3;
            case CAROUSEL_IMAGE_SQUARE_4:
                return DarkThemeImageReference.CAROUSEL_IMAGE_SQUARE_4;
            case CAROUSEL_IMAGE_SQUARE_5:
                return DarkThemeImageReference.CAROUSEL_IMAGE_SQUARE_5;
            case CAROUSEL_IMAGE_SQUARE_6:
                return DarkThemeImageReference.CAROUSEL_IMAGE_SQUARE_6;
            case CAROUSEL_IMAGE_SQUARE_7:
                return DarkThemeImageReference.CAROUSEL_IMAGE_SQUARE_7;
            case CAROUSEL_IMAGE_SQUARE_8:
                return DarkThemeImageReference.CAROUSEL_IMAGE_SQUARE_8;
            case CAROUSEL_IMAGE_SQUARE_9:
                return DarkThemeImageReference.CAROUSEL_IMAGE_SQUARE_9;
            case CAROUSEL_IMAGE_LANDSCAPE_0:
                return DarkThemeImageReference.CAROUSEL_IMAGE_LANDSCAPE_0;
            case CAROUSEL_IMAGE_LANDSCAPE_1:
                return DarkThemeImageReference.CAROUSEL_IMAGE_LANDSCAPE_1;
            case CAROUSEL_IMAGE_LANDSCAPE_2:
                return DarkThemeImageReference.CAROUSEL_IMAGE_LANDSCAPE_2;
            case CAROUSEL_IMAGE_LANDSCAPE_3:
                return DarkThemeImageReference.CAROUSEL_IMAGE_LANDSCAPE_3;
            case CAROUSEL_IMAGE_LANDSCAPE_4:
                return DarkThemeImageReference.CAROUSEL_IMAGE_LANDSCAPE_4;
            case CAROUSEL_IMAGE_LANDSCAPE_5:
                return DarkThemeImageReference.CAROUSEL_IMAGE_LANDSCAPE_5;
            case CAROUSEL_IMAGE_LANDSCAPE_6:
                return DarkThemeImageReference.CAROUSEL_IMAGE_LANDSCAPE_6;
            case CAROUSEL_IMAGE_LANDSCAPE_7:
                return DarkThemeImageReference.CAROUSEL_IMAGE_LANDSCAPE_7;
            case CAROUSEL_IMAGE_LANDSCAPE_8:
                return DarkThemeImageReference.CAROUSEL_IMAGE_LANDSCAPE_8;
            case CAROUSEL_IMAGE_LANDSCAPE_9:
                return DarkThemeImageReference.CAROUSEL_IMAGE_LANDSCAPE_9;
            default:
                return DarkThemeImageReference.getUnknownEnum();
        }
    }
}
