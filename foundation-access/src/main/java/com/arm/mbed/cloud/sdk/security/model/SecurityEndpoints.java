// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import com.arm.mbed.cloud.sdk.annotations.Internal;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.common.AbstractEndpoints;
import com.arm.mbed.cloud.sdk.common.ServiceRegistry;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.DeviceSecurityDeviceCertificateRenewalsApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.SecurityAndIdentityCertificateIssuerConfigurationsApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.SecurityAndIdentityCertificateIssuersApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.SecurityAndIdentityCertificatesApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.SecurityAndIdentityDeveloperClassCertificatesApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.SecurityAndIdentityPreSharedKeysApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.SecurityAndIdentityServerCredentialsApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.TenantSecurityAndIdentityCertificatesApi;

/**
 * Endpoints for Security APIs module.
 */
@Preamble(description = "Endpoints for Security APIs module.")
@Internal
@SuppressWarnings("PMD.CyclomaticComplexity")
public class SecurityEndpoints extends AbstractEndpoints {
    /**
     * Low level endpoints for device security device certificate renewals apis.
     */
    @Internal
    private final DeviceSecurityDeviceCertificateRenewalsApi deviceSecurityDeviceCertificateRenewalsApi;

    /**
     * Low level endpoints for security and identity certificate issuers apis.
     */
    @Internal
    private final SecurityAndIdentityCertificateIssuersApi securityAndIdentityCertificateIssuersApi;

    /**
     * Low level endpoints for security and identity certificate issuer configurations apis.
     */
    @Internal
    private final SecurityAndIdentityCertificateIssuerConfigurationsApi securityAndIdentityCertificateIssuerConfigurationsApi;

    /**
     * Low level endpoints for security and identity developer class certificates apis.
     */
    @Internal
    private final SecurityAndIdentityDeveloperClassCertificatesApi securityAndIdentityDeveloperClassCertificatesApi;

    /**
     * Low level endpoints for security and identity certificates apis.
     */
    @Internal
    private final SecurityAndIdentityCertificatesApi securityAndIdentityCertificatesApi;

    /**
     * Low level endpoints for security and identity pre shared keys apis.
     */
    @Internal
    private final SecurityAndIdentityPreSharedKeysApi securityAndIdentityPreSharedKeysApi;

    /**
     * Low level endpoints for security and identity server credentials apis.
     */
    @Internal
    private final SecurityAndIdentityServerCredentialsApi securityAndIdentityServerCredentialsApi;

    /**
     * Low level endpoints for tenant security and identity certificates apis.
     */
    @Internal
    private final TenantSecurityAndIdentityCertificatesApi tenantSecurityAndIdentityCertificatesApi;

    /**
     * Constructor.
     * 
     * @param services
     *            created services {@link ServiceRegistry}.
     */
    public SecurityEndpoints(ServiceRegistry services) {
        super(services);
        this.deviceSecurityDeviceCertificateRenewalsApi = initialiseService(DeviceSecurityDeviceCertificateRenewalsApi.class);
        this.securityAndIdentityCertificateIssuersApi = initialiseService(SecurityAndIdentityCertificateIssuersApi.class);
        this.securityAndIdentityCertificateIssuerConfigurationsApi = initialiseService(SecurityAndIdentityCertificateIssuerConfigurationsApi.class);
        this.securityAndIdentityDeveloperClassCertificatesApi = initialiseService(SecurityAndIdentityDeveloperClassCertificatesApi.class);
        this.securityAndIdentityCertificatesApi = initialiseService(SecurityAndIdentityCertificatesApi.class);
        this.securityAndIdentityPreSharedKeysApi = initialiseService(SecurityAndIdentityPreSharedKeysApi.class);
        this.securityAndIdentityServerCredentialsApi = initialiseService(SecurityAndIdentityServerCredentialsApi.class);
        this.tenantSecurityAndIdentityCertificatesApi = initialiseService(TenantSecurityAndIdentityCertificatesApi.class);
    }

    /**
     * Gets low level endpoints for security and identity certificate issuers apis.
     * 
     * @return securityAndIdentityCertificateIssuersApi
     */
    @Internal
    public SecurityAndIdentityCertificateIssuersApi getSecurityAndIdentityCertificateIssuersApi() {
        return securityAndIdentityCertificateIssuersApi;
    }

    /**
     * Gets low level endpoints for security and identity certificate issuer configurations apis.
     * 
     * @return securityAndIdentityCertificateIssuerConfigurationsApi
     */
    @Internal
    public SecurityAndIdentityCertificateIssuerConfigurationsApi
           getSecurityAndIdentityCertificateIssuerConfigurationsApi() {
        return securityAndIdentityCertificateIssuerConfigurationsApi;
    }

    /**
     * Gets low level endpoints for security and identity developer class certificates apis.
     * 
     * @return securityAndIdentityDeveloperClassCertificatesApi
     */
    @Internal
    public SecurityAndIdentityDeveloperClassCertificatesApi getSecurityAndIdentityDeveloperClassCertificatesApi() {
        return securityAndIdentityDeveloperClassCertificatesApi;
    }

    /**
     * Gets low level endpoints for security and identity certificates apis.
     * 
     * @return securityAndIdentityCertificatesApi
     */
    @Internal
    public SecurityAndIdentityCertificatesApi getSecurityAndIdentityCertificatesApi() {
        return securityAndIdentityCertificatesApi;
    }

    /**
     * Gets low level endpoints for security and identity pre shared keys apis.
     * 
     * @return securityAndIdentityPreSharedKeysApi
     */
    @Internal
    public SecurityAndIdentityPreSharedKeysApi getSecurityAndIdentityPreSharedKeysApi() {
        return securityAndIdentityPreSharedKeysApi;
    }

    /**
     * Gets low level endpoints for security and identity server credentials apis.
     * 
     * @return securityAndIdentityServerCredentialsApi
     */
    @Internal
    public SecurityAndIdentityServerCredentialsApi getSecurityAndIdentityServerCredentialsApi() {
        return securityAndIdentityServerCredentialsApi;
    }

    /**
     * Gets low level endpoints for tenant security and identity certificates apis.
     * 
     * @return tenantSecurityAndIdentityCertificatesApi
     */
    @Internal
    public TenantSecurityAndIdentityCertificatesApi getTenantSecurityAndIdentityCertificatesApi() {
        return tenantSecurityAndIdentityCertificatesApi;
    }

    /**
     * Gets low level endpoints for device security device certificate renewals apis.
     * 
     * @return deviceSecurityDeviceCertificateRenewalsApi
     */
    @Internal
    public DeviceSecurityDeviceCertificateRenewalsApi getDeviceSecurityDeviceCertificateRenewalsApi() {
        return deviceSecurityDeviceCertificateRenewalsApi;
    }

    /**
     * Clones this instance.
     * 
     * <p>
     * 
     * @see java.lang.Object#clone()
     * @return a cloned instance
     */
    @Override
    public SecurityEndpoints clone() {
        return new SecurityEndpoints(getRegistryClone());
    }
}
