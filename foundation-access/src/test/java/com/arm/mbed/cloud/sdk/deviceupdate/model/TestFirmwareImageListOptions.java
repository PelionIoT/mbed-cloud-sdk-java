// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-119),
                                                                                              Long.valueOf(122),
                                                                                              Order.getDefault(),
                                                                                              "2bb22383-c427-4eff-b0e7-d694b58417c5",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1609926594656L),
                                                                                                        new Date(1609926589699L),
                                                                                                        new Date(1609926589180L),
                                                                                                        new Date(1609926592686L),
                                                                                                        new Date(1609926586366L),
                                                                                                        new Date(1609926590685L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1609926586778L),
                                                                                                           new Date(1609926591637L),
                                                                                                           new Date(1609926591346L),
                                                                                                           new Date(1609926590600L),
                                                                                                           new Date(1609926590782L),
                                                                                                           new Date(1609926592632L),
                                                                                                           new Date(1609926590282L),
                                                                                                           new Date(1609926594852L),
                                                                                                           new Date(1609926593353L)))
                                                                            .lessThanUpdatedAt(new Date(1609926592466L))
                                                                            .greaterThanUpdatedAt(new Date(1609926590036L))
                                                                            .equalToName("d0782c52-bbba-45f6-8278-a85c27152a79")
                                                                            .notEqualToName("f8be587d-92a8-4935-8556-d1af728b8c41")
                                                                            .inNames(Arrays.asList("794bb93f-0c5d-4e8a-b440-fba3ddc1a02b",
                                                                                                   "2350e0b8-276a-4354-a813-8a3b879eb0e9",
                                                                                                   "6d6e600f-aa4d-4828-afdd-18d4b1150def",
                                                                                                   "b1097153-c92a-4a93-86bb-36a5050294de",
                                                                                                   "10a714b1-54bf-4731-9ee6-98c64d8fc38d",
                                                                                                   "7044bdef-520e-4150-9d09-5d92fa527704",
                                                                                                   "ae7d873b-8c0b-4c3b-ada4-7ccde54f0234"))
                                                                            .notInNames(Arrays.asList("78e2c330-c93b-4373-ab8f-a8170512d78d",
                                                                                                      "98740e19-25b2-470b-be1e-234c03dee9a8",
                                                                                                      "12953117-ce30-492c-88d8-43b95e8e180f",
                                                                                                      "7595c461-25d6-479c-aa2a-7b23285f1b2e"))
                                                                            .equalToDescription("1e760321-7222-44fa-8f61-d6d9e88d2b28")
                                                                            .notEqualToDescription("8546a583-6d0f-4759-ab1a-15599c1d067a")
                                                                            .inDescriptions(Arrays.asList("8f1dbb3d-0eea-423e-990b-c3f55e6873bf",
                                                                                                          "82487ee3-d2a2-484a-8e24-553b49de8afc",
                                                                                                          "ae1dc8e0-faee-419c-a969-9b2dc62ae01f",
                                                                                                          "d890a150-6eda-4671-94a2-b0f0834824c3",
                                                                                                          "fed62ca6-8d0b-4086-a289-f5999ad3b4b8",
                                                                                                          "99844fcf-b30b-4c7e-a843-a8ea7e71fd62",
                                                                                                          "10797c3c-ad0d-46d1-b48c-67f6ffdfab13",
                                                                                                          "7ac918f7-afc1-469e-aeed-44d664752360"))
                                                                            .notInDescriptions(Arrays.asList("11fb8ebf-38db-49ce-900a-702976559335",
                                                                                                             "38d9e12f-c09f-479e-a111-c41ebd7001a6",
                                                                                                             "7ee9b06e-b17c-402d-98e3-0f871c38fdbd"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1609926591951L),
                                                                                                        new Date(1609926593438L),
                                                                                                        new Date(1609926595182L),
                                                                                                        new Date(1609926586622L),
                                                                                                        new Date(1609926593277L),
                                                                                                        new Date(1609926589083L),
                                                                                                        new Date(1609926589558L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1609926586984L),
                                                                                                           new Date(1609926594357L),
                                                                                                           new Date(1609926590832L)))
                                                                            .lessThanCreatedAt(new Date(1609926586294L))
                                                                            .greaterThanCreatedAt(new Date(1609926587799L))
                                                                            .equalToDatafileUrl("7dd05dfe-0cac-447a-93a9-bbb085363d3f")
                                                                            .notEqualToDatafileUrl("603fbac1-a7ca-4cda-aa9b-b5d3755db00d")
                                                                            .inDatafileUrls(Arrays.asList("6961db4b-89e6-46fa-b31b-a4ef019b7445",
                                                                                                          "6974d3d8-89a9-4e04-b62e-c5ca75cec258",
                                                                                                          "600e10f8-ce03-4104-8214-cf8cfb65e6fc",
                                                                                                          "830f0448-8909-4287-a08f-1d105087c57f",
                                                                                                          "ff44fccb-9992-4ad0-b846-34f25897bec9",
                                                                                                          "c904ddf9-5eea-4279-bd1d-526af5a4a85b",
                                                                                                          "223ab1eb-d761-4e31-8e78-ab683743683a",
                                                                                                          "d8c6c69c-96c7-4212-af46-47573df00611"))
                                                                            .notInDatafileUrls(Arrays.asList("8a86babb-00c4-4f2a-9d45-b0d0266bdbd7",
                                                                                                             "bf70c1a1-5f57-446d-a140-b302cb41a32d",
                                                                                                             "626fb3ec-9c25-4aa2-97f5-b9507dff14fa"))
                                                                            .equalToDatafileSize(Long.valueOf(-106))
                                                                            .notEqualToDatafileSize(Long.valueOf(-117))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(42),
                                                                                                           Long.valueOf(-83),
                                                                                                           Long.valueOf(-48),
                                                                                                           Long.valueOf(-99),
                                                                                                           Long.valueOf(-41),
                                                                                                           Long.valueOf(-114),
                                                                                                           Long.valueOf(110)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(58),
                                                                                                              Long.valueOf(-47),
                                                                                                              Long.valueOf(6),
                                                                                                              Long.valueOf(7),
                                                                                                              Long.valueOf(-114),
                                                                                                              Long.valueOf(87),
                                                                                                              Long.valueOf(-46),
                                                                                                              Long.valueOf(-108),
                                                                                                              Long.valueOf(55)))
                                                                            .equalToDatafileChecksum("c8488ed7-fba8-4ccc-bffb-368c5185142b")
                                                                            .notEqualToDatafileChecksum("9307b9b2-4f14-4972-aca0-8dacbbfdc99d")
                                                                            .inDatafileChecksums(Arrays.asList("f38d3088-1d7c-401d-b1e5-a22a370289c6",
                                                                                                               "8474ce1c-934e-4899-bb87-b4385b79ed4a",
                                                                                                               "9d4be0bc-a763-41f7-aa0e-2fb13291d9f9",
                                                                                                               "e5e3705b-dde4-42c9-bf4f-2ee4456b5dc4",
                                                                                                               "0485f2eb-1c4d-4a34-b0f2-d1ae83beac3c"))
                                                                            .notInDatafileChecksums(Arrays.asList("6be1c998-b45f-412a-af57-057a4a581497",
                                                                                                                  "6eed0fdb-59c7-44f7-97a3-87f11227dd25",
                                                                                                                  "5cdae8f2-92e9-41b9-b528-ddfd33bbcd8d",
                                                                                                                  "cc8a551c-e0ce-4088-a894-b4d563566c61",
                                                                                                                  "7e8fe6ad-cce8-423d-a9bd-85a4e3642906",
                                                                                                                  "d8a3e4b9-fc49-4a65-99be-94d550a86c4a"))
                                                                            .equalToId("c7e670f5-7ee8-45b7-9ade-c5690a0a9635")
                                                                            .notEqualToId("3e8e3259-2dcb-41f3-907e-5f8a4a5245cf")
                                                                            .inIds(Arrays.asList("a77356e5-925a-4836-b9b2-744f29419352",
                                                                                                 "4930203b-9ffd-41d1-a027-ed6acd295073",
                                                                                                 "530755ae-b183-4612-96d9-a3a89b4efa8d",
                                                                                                 "60c1ba6e-02d0-4f65-a538-2c7e656ad361",
                                                                                                 "5cdb2dd1-8655-4f67-bf05-ddbf2014e9ad",
                                                                                                 "a9ec5f6d-9b92-47ce-9971-8d1122ff3d69",
                                                                                                 "08df09fc-f246-48e9-ab13-f312a093cb8d",
                                                                                                 "2f669e3a-27ad-4757-aa7a-55889e2da79e"))
                                                                            .notInIds(Arrays.asList("36fd489c-76b2-4207-b1f8-9871c392e8c2",
                                                                                                    "da54ca80-4402-4132-93af-c78219170b06",
                                                                                                    "3fb726b9-0a59-483b-8dc7-48d9bb10e622",
                                                                                                    "7e1b59af-04d8-42a1-a700-a15136f588c0"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1609926594656L), new Date(1609926589699L), new Date(1609926589180L),
                                       new Date(1609926592686L), new Date(1609926586366L), new Date(1609926590685L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1609926586778L), new Date(1609926591637L), new Date(1609926591346L),
                                       new Date(1609926590600L), new Date(1609926590782L), new Date(1609926592632L),
                                       new Date(1609926590282L), new Date(1609926594852L), new Date(1609926593353L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1609926592466L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1609926590036L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("d0782c52-bbba-45f6-8278-a85c27152a79",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("f8be587d-92a8-4935-8556-d1af728b8c41",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("794bb93f-0c5d-4e8a-b440-fba3ddc1a02b", "2350e0b8-276a-4354-a813-8a3b879eb0e9",
                                       "6d6e600f-aa4d-4828-afdd-18d4b1150def", "b1097153-c92a-4a93-86bb-36a5050294de",
                                       "10a714b1-54bf-4731-9ee6-98c64d8fc38d", "7044bdef-520e-4150-9d09-5d92fa527704",
                                       "ae7d873b-8c0b-4c3b-ada4-7ccde54f0234"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("78e2c330-c93b-4373-ab8f-a8170512d78d", "98740e19-25b2-470b-be1e-234c03dee9a8",
                                       "12953117-ce30-492c-88d8-43b95e8e180f", "7595c461-25d6-479c-aa2a-7b23285f1b2e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("1e760321-7222-44fa-8f61-d6d9e88d2b28",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("8546a583-6d0f-4759-ab1a-15599c1d067a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("8f1dbb3d-0eea-423e-990b-c3f55e6873bf", "82487ee3-d2a2-484a-8e24-553b49de8afc",
                                       "ae1dc8e0-faee-419c-a969-9b2dc62ae01f", "d890a150-6eda-4671-94a2-b0f0834824c3",
                                       "fed62ca6-8d0b-4086-a289-f5999ad3b4b8", "99844fcf-b30b-4c7e-a843-a8ea7e71fd62",
                                       "10797c3c-ad0d-46d1-b48c-67f6ffdfab13", "7ac918f7-afc1-469e-aeed-44d664752360"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("11fb8ebf-38db-49ce-900a-702976559335", "38d9e12f-c09f-479e-a111-c41ebd7001a6",
                                       "7ee9b06e-b17c-402d-98e3-0f871c38fdbd"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1609926591951L), new Date(1609926593438L), new Date(1609926595182L),
                                       new Date(1609926586622L), new Date(1609926593277L), new Date(1609926589083L),
                                       new Date(1609926589558L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1609926586984L), new Date(1609926594357L), new Date(1609926590832L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1609926586294L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1609926587799L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("7dd05dfe-0cac-447a-93a9-bbb085363d3f",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("603fbac1-a7ca-4cda-aa9b-b5d3755db00d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("6961db4b-89e6-46fa-b31b-a4ef019b7445", "6974d3d8-89a9-4e04-b62e-c5ca75cec258",
                                       "600e10f8-ce03-4104-8214-cf8cfb65e6fc", "830f0448-8909-4287-a08f-1d105087c57f",
                                       "ff44fccb-9992-4ad0-b846-34f25897bec9", "c904ddf9-5eea-4279-bd1d-526af5a4a85b",
                                       "223ab1eb-d761-4e31-8e78-ab683743683a", "d8c6c69c-96c7-4212-af46-47573df00611"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("8a86babb-00c4-4f2a-9d45-b0d0266bdbd7", "bf70c1a1-5f57-446d-a140-b302cb41a32d",
                                       "626fb3ec-9c25-4aa2-97f5-b9507dff14fa"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-106),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-117),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(42), Long.valueOf(-83), Long.valueOf(-48), Long.valueOf(-99),
                                       Long.valueOf(-41), Long.valueOf(-114), Long.valueOf(110)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(58), Long.valueOf(-47), Long.valueOf(6), Long.valueOf(7),
                                       Long.valueOf(-114), Long.valueOf(87), Long.valueOf(-46), Long.valueOf(-108),
                                       Long.valueOf(55)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("c8488ed7-fba8-4ccc-bffb-368c5185142b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("9307b9b2-4f14-4972-aca0-8dacbbfdc99d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("f38d3088-1d7c-401d-b1e5-a22a370289c6", "8474ce1c-934e-4899-bb87-b4385b79ed4a",
                                       "9d4be0bc-a763-41f7-aa0e-2fb13291d9f9", "e5e3705b-dde4-42c9-bf4f-2ee4456b5dc4",
                                       "0485f2eb-1c4d-4a34-b0f2-d1ae83beac3c"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("6be1c998-b45f-412a-af57-057a4a581497", "6eed0fdb-59c7-44f7-97a3-87f11227dd25",
                                       "5cdae8f2-92e9-41b9-b528-ddfd33bbcd8d", "cc8a551c-e0ce-4088-a894-b4d563566c61",
                                       "7e8fe6ad-cce8-423d-a9bd-85a4e3642906", "d8a3e4b9-fc49-4a65-99be-94d550a86c4a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("c7e670f5-7ee8-45b7-9ade-c5690a0a9635",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("3e8e3259-2dcb-41f3-907e-5f8a4a5245cf",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("a77356e5-925a-4836-b9b2-744f29419352", "4930203b-9ffd-41d1-a027-ed6acd295073",
                                       "530755ae-b183-4612-96d9-a3a89b4efa8d", "60c1ba6e-02d0-4f65-a538-2c7e656ad361",
                                       "5cdb2dd1-8655-4f67-bf05-ddbf2014e9ad", "a9ec5f6d-9b92-47ce-9971-8d1122ff3d69",
                                       "08df09fc-f246-48e9-ab13-f312a093cb8d", "2f669e3a-27ad-4757-aa7a-55889e2da79e"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("36fd489c-76b2-4207-b1f8-9871c392e8c2", "da54ca80-4402-4132-93af-c78219170b06",
                                       "3fb726b9-0a59-483b-8dc7-48d9bb10e622", "7e1b59af-04d8-42a1-a700-a15136f588c0"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(106),
                                                                                              Long.valueOf(87),
                                                                                              Order.getDefault(),
                                                                                              "90d32fd5-8864-4062-a1e0-6685daae7303",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(106),
                                                                                              Long.valueOf(87),
                                                                                              Order.getDefault(),
                                                                                              "90d32fd5-8864-4062-a1e0-6685daae7303",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(48),
                                                                                              Long.valueOf(-114),
                                                                                              Order.getDefault(),
                                                                                              "f7225809-0c92-44ca-8197-7fbb28096a48",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(48),
                                                                                              Long.valueOf(-114),
                                                                                              Order.getDefault(),
                                                                                              "f7225809-0c92-44ca-8197-7fbb28096a48",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(25),
                                                                                              Long.valueOf(119),
                                                                                              Order.getDefault(),
                                                                                              "350fdf35-c5e0-485c-9894-554e47a6c52a",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
