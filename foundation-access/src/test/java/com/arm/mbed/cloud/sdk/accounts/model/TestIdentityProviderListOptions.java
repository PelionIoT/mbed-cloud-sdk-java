// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import org.junit.Test;

/**
 * Unit tests for Model IdentityProviderListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestIdentityProviderListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            IdentityProviderListOptions identityproviderlistoptions1 = new IdentityProviderListOptions(Integer.valueOf(-109),
                                                                                                       Long.valueOf(-81),
                                                                                                       Order.getDefault(),
                                                                                                       "eec10f51-c627-45c7-9d79-761bd98e6f21",
                                                                                                       null, null);
            IdentityProviderListOptions identityproviderlistoptions2 = identityproviderlistoptions1.clone();
            assertNotNull(identityproviderlistoptions1);
            assertNotNull(identityproviderlistoptions2);
            assertNotSame(identityproviderlistoptions2, identityproviderlistoptions1);
            assertEquals(identityproviderlistoptions2, identityproviderlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            IdentityProviderListOptions identityproviderlistoptions1 = new IdentityProviderListOptions(Integer.valueOf(61),
                                                                                                       Long.valueOf(110),
                                                                                                       Order.getDefault(),
                                                                                                       "b98dce66-90e5-4015-aac1-3ce49f8d3afb",
                                                                                                       null, null);
            IdentityProviderListOptions identityproviderlistoptions2 = new IdentityProviderListOptions(Integer.valueOf(61),
                                                                                                       Long.valueOf(110),
                                                                                                       Order.getDefault(),
                                                                                                       "b98dce66-90e5-4015-aac1-3ce49f8d3afb",
                                                                                                       null, null);
            assertNotNull(identityproviderlistoptions1);
            assertNotNull(identityproviderlistoptions2);
            assertNotSame(identityproviderlistoptions2, identityproviderlistoptions1);
            assertEquals(identityproviderlistoptions2, identityproviderlistoptions1);
            assertEquals(identityproviderlistoptions2.hashCode(), identityproviderlistoptions1.hashCode());
            int hashCode = identityproviderlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, identityproviderlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            IdentityProviderListOptions identityproviderlistoptions1 = new IdentityProviderListOptions(Integer.valueOf(-65),
                                                                                                       Long.valueOf(26),
                                                                                                       Order.getDefault(),
                                                                                                       "4d9e7301-4fb1-428e-88eb-ab487987297e",
                                                                                                       null, null);
            IdentityProviderListOptions identityproviderlistoptions2 = new IdentityProviderListOptions(Integer.valueOf(-65),
                                                                                                       Long.valueOf(26),
                                                                                                       Order.getDefault(),
                                                                                                       "4d9e7301-4fb1-428e-88eb-ab487987297e",
                                                                                                       null, null);
            IdentityProviderListOptions identityproviderlistoptions3 = new IdentityProviderListOptions(Integer.valueOf(42),
                                                                                                       Long.valueOf(67),
                                                                                                       Order.getDefault(),
                                                                                                       "9bc31234-1776-44ee-b650-3452a986e7ba",
                                                                                                       null, null);
            assertNotNull(identityproviderlistoptions1);
            assertNotNull(identityproviderlistoptions2);
            assertNotNull(identityproviderlistoptions3);
            assertNotSame(identityproviderlistoptions2, identityproviderlistoptions1);
            assertNotSame(identityproviderlistoptions3, identityproviderlistoptions1);
            assertEquals(identityproviderlistoptions2, identityproviderlistoptions1);
            assertEquals(identityproviderlistoptions2, identityproviderlistoptions1);
            assertEquals(identityproviderlistoptions1, identityproviderlistoptions2);
            assertEquals(identityproviderlistoptions1, identityproviderlistoptions1);
            assertFalse(identityproviderlistoptions1.equals(null));
            assertNotEquals(identityproviderlistoptions3, identityproviderlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
