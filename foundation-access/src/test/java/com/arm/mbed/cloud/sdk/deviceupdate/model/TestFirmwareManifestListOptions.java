// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-66),
                                                                                                       Long.valueOf(-89),
                                                                                                       Order.getDefault(),
                                                                                                       "7e725763-ea6b-4128-b230-d7255c5defc1",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1609926588201L),
                                                                                                              new Date(1609926589030L),
                                                                                                              new Date(1609926589710L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1609926593546L),
                                                                                                                 new Date(1609926587034L),
                                                                                                                 new Date(1609926594575L)))
                                                                                  .lessThanCreatedAt(new Date(1609926587978L))
                                                                                  .greaterThanCreatedAt(new Date(1609926593056L))
                                                                                  .equalToName("2ccafaba-9087-4951-86fe-2c1142dd63f3")
                                                                                  .notEqualToName("60e4a62f-eafe-444c-b10e-32840129a6d1")
                                                                                  .inNames(Arrays.asList("2a538f32-9289-42a2-8cd1-2996c80ccee0",
                                                                                                         "6690136a-41b8-4d77-9f76-4d1cf4d2b11f",
                                                                                                         "980b1ef1-e8c4-4e91-a39b-c960bb40c8a5",
                                                                                                         "18b5fcab-55a2-4a17-b321-abf184942e2d",
                                                                                                         "bd443633-b1a0-4331-97eb-7506a15da77b",
                                                                                                         "48b9297e-7d8c-4371-b69a-8e58dea10c6a",
                                                                                                         "14b4f90c-7dfb-406f-996a-50b21af7491f",
                                                                                                         "7fee0945-85ba-411a-9d13-5d1c9efc1cbc",
                                                                                                         "58f9533c-3fe5-4ce3-a6c9-e7f7937aa388"))
                                                                                  .notInNames(Arrays.asList("d98a4032-49af-47cf-9f67-75ba576aa2cb"))
                                                                                  .equalToId("e38ce14a-760b-4507-9c68-a268ad70a3ec")
                                                                                  .notEqualToId("9bab7b3f-a998-49f3-8d4d-77462f7a9ebe")
                                                                                  .inIds(Arrays.asList("070a421c-85c9-4c21-bdfc-53f8c586d9cc",
                                                                                                       "947e9141-800a-4404-9c19-086174c87d3d"))
                                                                                  .notInIds(Arrays.asList("1100b02f-3164-4985-82ba-dbb001ecaf9a",
                                                                                                          "7498b871-7984-4260-9aab-415d06a2eb34",
                                                                                                          "42b1a063-cef9-4c7d-8c67-cc4be264cacd",
                                                                                                          "5d3c83f7-bc37-41e1-9499-cb5a8538f810",
                                                                                                          "de84714f-1a49-4e04-b8d1-9e68d1ffd2df"))
                                                                                  .equalToDatafileUrl("348f0670-7b7d-48f6-9da0-11bba33391a3")
                                                                                  .notEqualToDatafileUrl("5b1edad1-6b3f-4ab0-b1d2-62e5fceda5ed")
                                                                                  .inDatafileUrls(Arrays.asList("65d7bfb5-61ab-4a5d-a053-6edadef7fb3d",
                                                                                                                "87f20a8b-e0fb-4b59-9966-3ee26b7c4d38"))
                                                                                  .notInDatafileUrls(Arrays.asList("3b5b28b3-572b-4585-a6bf-96d4b8af1887",
                                                                                                                   "b257aaf1-9ee5-480d-ae9f-1bfed62b8c8a",
                                                                                                                   "ff463420-3bf0-4efd-b2b9-672cef951d10",
                                                                                                                   "039e10cc-f136-4022-8d6b-8eb86c88e575",
                                                                                                                   "2c00368c-32c0-4495-837a-5939d19aea2b",
                                                                                                                   "4bba85f3-5ede-4715-818d-7db4add843dc",
                                                                                                                   "a9c4e424-890e-46c4-a421-589f9524cfd7",
                                                                                                                   "9b20d9a2-a511-4915-a6fc-fbd110c7ce53"))
                                                                                  .equalToDatafileSize(Long.valueOf(-23))
                                                                                  .notEqualToDatafileSize(Long.valueOf(72))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(122),
                                                                                                                 Long.valueOf(51),
                                                                                                                 Long.valueOf(-82),
                                                                                                                 Long.valueOf(-40),
                                                                                                                 Long.valueOf(-52)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(-105),
                                                                                                                    Long.valueOf(-120)))
                                                                                  .equalToDeviceClass("01fcb124-2b11-4ba5-a9a6-fe4adb440061")
                                                                                  .notEqualToDeviceClass("8a0110ac-2247-497e-880c-2b4649fdc21c")
                                                                                  .inDeviceClass(Arrays.asList("10abf8f1-2b8e-4ac6-962f-b58eec71104f",
                                                                                                               "3ee4518e-ad45-4b21-bd26-8a55ed7d23c1",
                                                                                                               "e02ce6ca-c3a0-453c-848e-167bd88d87c9"))
                                                                                  .notInDeviceClass(Arrays.asList("2428e974-0f9d-4f08-90d4-a5b1aea9620a",
                                                                                                                  "dd16aff4-7b7a-46e3-9d1d-36dbaf1af885",
                                                                                                                  "eee87b86-2560-4a14-9c81-a162c4b2b578",
                                                                                                                  "3e5625ec-b68d-4343-a54d-740df8b63c94",
                                                                                                                  "3a940857-cece-473b-81fe-b87f300292d6",
                                                                                                                  "e0061acd-6363-42d8-9935-ba10092b9d34"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1609926587403L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1609926589933L)))
                                                                                  .lessThanTimestamp(new Date(1609926594439L))
                                                                                  .greaterThanTimestamp(new Date(1609926590614L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1609926589500L),
                                                                                                              new Date(1609926588487L),
                                                                                                              new Date(1609926592150L),
                                                                                                              new Date(1609926594003L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1609926589427L),
                                                                                                                 new Date(1609926593438L),
                                                                                                                 new Date(1609926588851L)))
                                                                                  .lessThanUpdatedAt(new Date(1609926587113L))
                                                                                  .greaterThanUpdatedAt(new Date(1609926586491L))
                                                                                  .equalToDescription("94d45cb3-1c62-458d-97cd-04dcb6453ae0")
                                                                                  .notEqualToDescription("5d36c161-6b76-419d-bed5-1ab461c43335")
                                                                                  .inDescriptions(Arrays.asList("4b16e533-9028-40c1-aed5-3dbf1d8af1ca",
                                                                                                                "2c163760-6cc5-401f-875e-71473492c552",
                                                                                                                "14826518-7ca9-49b4-9266-c2ecfa263a25",
                                                                                                                "da4b28d0-1b48-4808-9c64-1c13024d8441",
                                                                                                                "a99a744d-c5c5-47cf-97da-28bc4b9cd1bf",
                                                                                                                "9d989c08-3b0f-40b3-bdb4-c1371e9ec655",
                                                                                                                "a382ffe0-7067-4bb7-ac23-cc7b9e4fe0f2",
                                                                                                                "8961de93-0c4b-4fb8-8d72-4be7fbb24196"))
                                                                                  .notInDescriptions(Arrays.asList("91835f2b-7b5c-4cbe-9ff8-68c0d1c56c79",
                                                                                                                   "97411f7b-25cf-41ac-9a84-317c905f125d",
                                                                                                                   "d071c695-98c0-43e3-826a-510c4c52d4fc",
                                                                                                                   "24e746be-db24-470a-8ac3-27040cb9a7e0",
                                                                                                                   "36678d57-f97a-4c9f-bdaa-0b953ce3f506",
                                                                                                                   "5cec0104-7247-4598-bce0-989a0c28ec2d",
                                                                                                                   "2179545f-940a-467b-a266-5ab55ea4fc09",
                                                                                                                   "6f943f91-9e2c-4cc3-8a0f-dbf4c029c592"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1609926588201L), new Date(1609926589030L), new Date(1609926589710L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1609926593546L), new Date(1609926587034L), new Date(1609926594575L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1609926587978L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1609926593056L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("2ccafaba-9087-4951-86fe-2c1142dd63f3",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("60e4a62f-eafe-444c-b10e-32840129a6d1",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("2a538f32-9289-42a2-8cd1-2996c80ccee0", "6690136a-41b8-4d77-9f76-4d1cf4d2b11f",
                                       "980b1ef1-e8c4-4e91-a39b-c960bb40c8a5", "18b5fcab-55a2-4a17-b321-abf184942e2d",
                                       "bd443633-b1a0-4331-97eb-7506a15da77b", "48b9297e-7d8c-4371-b69a-8e58dea10c6a",
                                       "14b4f90c-7dfb-406f-996a-50b21af7491f", "7fee0945-85ba-411a-9d13-5d1c9efc1cbc",
                                       "58f9533c-3fe5-4ce3-a6c9-e7f7937aa388"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("d98a4032-49af-47cf-9f67-75ba576aa2cb"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("e38ce14a-760b-4507-9c68-a268ad70a3ec",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9bab7b3f-a998-49f3-8d4d-77462f7a9ebe",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("070a421c-85c9-4c21-bdfc-53f8c586d9cc", "947e9141-800a-4404-9c19-086174c87d3d"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("1100b02f-3164-4985-82ba-dbb001ecaf9a", "7498b871-7984-4260-9aab-415d06a2eb34",
                                       "42b1a063-cef9-4c7d-8c67-cc4be264cacd", "5d3c83f7-bc37-41e1-9499-cb5a8538f810",
                                       "de84714f-1a49-4e04-b8d1-9e68d1ffd2df"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("348f0670-7b7d-48f6-9da0-11bba33391a3",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("5b1edad1-6b3f-4ab0-b1d2-62e5fceda5ed",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("65d7bfb5-61ab-4a5d-a053-6edadef7fb3d", "87f20a8b-e0fb-4b59-9966-3ee26b7c4d38"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("3b5b28b3-572b-4585-a6bf-96d4b8af1887", "b257aaf1-9ee5-480d-ae9f-1bfed62b8c8a",
                                       "ff463420-3bf0-4efd-b2b9-672cef951d10", "039e10cc-f136-4022-8d6b-8eb86c88e575",
                                       "2c00368c-32c0-4495-837a-5939d19aea2b", "4bba85f3-5ede-4715-818d-7db4add843dc",
                                       "a9c4e424-890e-46c4-a421-589f9524cfd7", "9b20d9a2-a511-4915-a6fc-fbd110c7ce53"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-23),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(72),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(122), Long.valueOf(51), Long.valueOf(-82), Long.valueOf(-40),
                                       Long.valueOf(-52)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-105), Long.valueOf(-120)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("01fcb124-2b11-4ba5-a9a6-fe4adb440061",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("8a0110ac-2247-497e-880c-2b4649fdc21c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("10abf8f1-2b8e-4ac6-962f-b58eec71104f", "3ee4518e-ad45-4b21-bd26-8a55ed7d23c1",
                                       "e02ce6ca-c3a0-453c-848e-167bd88d87c9"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("2428e974-0f9d-4f08-90d4-a5b1aea9620a", "dd16aff4-7b7a-46e3-9d1d-36dbaf1af885",
                                       "eee87b86-2560-4a14-9c81-a162c4b2b578", "3e5625ec-b68d-4343-a54d-740df8b63c94",
                                       "3a940857-cece-473b-81fe-b87f300292d6", "e0061acd-6363-42d8-9935-ba10092b9d34"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1609926587403L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1609926589933L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1609926594439L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1609926590614L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1609926589500L), new Date(1609926588487L), new Date(1609926592150L),
                                       new Date(1609926594003L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1609926589427L), new Date(1609926593438L), new Date(1609926588851L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1609926587113L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1609926586491L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("94d45cb3-1c62-458d-97cd-04dcb6453ae0",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("5d36c161-6b76-419d-bed5-1ab461c43335",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("4b16e533-9028-40c1-aed5-3dbf1d8af1ca", "2c163760-6cc5-401f-875e-71473492c552",
                                       "14826518-7ca9-49b4-9266-c2ecfa263a25", "da4b28d0-1b48-4808-9c64-1c13024d8441",
                                       "a99a744d-c5c5-47cf-97da-28bc4b9cd1bf", "9d989c08-3b0f-40b3-bdb4-c1371e9ec655",
                                       "a382ffe0-7067-4bb7-ac23-cc7b9e4fe0f2", "8961de93-0c4b-4fb8-8d72-4be7fbb24196"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("91835f2b-7b5c-4cbe-9ff8-68c0d1c56c79", "97411f7b-25cf-41ac-9a84-317c905f125d",
                                       "d071c695-98c0-43e3-826a-510c4c52d4fc", "24e746be-db24-470a-8ac3-27040cb9a7e0",
                                       "36678d57-f97a-4c9f-bdaa-0b953ce3f506", "5cec0104-7247-4598-bce0-989a0c28ec2d",
                                       "2179545f-940a-467b-a266-5ab55ea4fc09", "6f943f91-9e2c-4cc3-8a0f-dbf4c029c592"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-40),
                                                                                                       Long.valueOf(-85),
                                                                                                       Order.getDefault(),
                                                                                                       "1ac6ce39-8056-4d76-8a51-6dcfc5851d20",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-40),
                                                                                                       Long.valueOf(-85),
                                                                                                       Order.getDefault(),
                                                                                                       "1ac6ce39-8056-4d76-8a51-6dcfc5851d20",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(119),
                                                                                                       Long.valueOf(-95),
                                                                                                       Order.getDefault(),
                                                                                                       "a1ab03c2-36c8-44d4-bf48-5a799eab1caa",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(119),
                                                                                                       Long.valueOf(-95),
                                                                                                       Order.getDefault(),
                                                                                                       "a1ab03c2-36c8-44d4-bf48-5a799eab1caa",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(71),
                                                                                                       Long.valueOf(72),
                                                                                                       Order.getDefault(),
                                                                                                       "80e13487-42d1-4ba5-8d76-7612bdf4960f",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
