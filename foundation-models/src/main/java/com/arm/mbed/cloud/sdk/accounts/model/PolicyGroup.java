// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import com.arm.mbed.cloud.sdk.annotations.Internal;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.annotations.Required;
import com.arm.mbed.cloud.sdk.common.SdkModel;
import java.util.Date;
import java.util.Objects;

/**
 * Model for a policy group.
 */
@Preamble(description = "Model for a policy group.")
@SuppressWarnings({ "PMD.CyclomaticComplexity", "PMD.AvoidDuplicateLiterals" })
public class PolicyGroup implements SdkModel {
    /**
     * Serialisation Id.
     */
    private static final long serialVersionUID = -275988731161512L;

    /**
     * The ID of the account this group belongs to.
     */
    private final String accountId;

    /**
     * The number of API keys in this group.
     * 
     * <p>
     * 
     * @deprecated This field has been deprecated since Sat Aug 01 08:00:00 CST 2020 and will be removed by Sun Aug 01
     *             08:00:00 CST 2021. This property is deprecated. See 'application_count' property.
     */
    @Deprecated
    private final int apikeyCount;

    /**
     * The number of applications in this group.
     */
    private final int applicationCount;

    /**
     * Creation UTC time RFC3339.
     */
    private final Date createdAt;

    /**
     * The ID of the group.
     */
    private String id;

    /**
     * The name of the group.
     */
    @Required
    private String name;

    /**
     * Last update UTC time RFC3339.
     */
    private final Date updatedAt;

    /**
     * The number of users in this group.
     */
    private final int userCount;

    /**
     * Internal constructor.
     * 
     * <p>
     * Constructor based on all fields.
     * <p>
     * Note: Should not be used. Use {@link #PolicyGroup()} instead.
     * 
     * @param accountId
     *            The ID of the account this group belongs to.
     * @param apikeyCount
     *            The number of API keys in this group.
     * @param applicationCount
     *            The number of applications in this group.
     * @param createdAt
     *            Creation UTC time RFC3339.
     * @param id
     *            The ID of the group.
     * @param name
     *            The name of the group.
     * @param updatedAt
     *            Last update UTC time RFC3339.
     * @param userCount
     *            The number of users in this group.
     */
    @Internal
    @SuppressWarnings("PMD.CyclomaticComplexity")
    public PolicyGroup(String accountId, int apikeyCount, int applicationCount, Date createdAt, String id, String name,
                       Date updatedAt, int userCount) {
        super();
        this.accountId = accountId;
        this.apikeyCount = apikeyCount;
        this.applicationCount = applicationCount;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.userCount = userCount;
        setId(id);
        setName(name);
    }

    /**
     * Internal constructor.
     * 
     * <p>
     * Constructor based on a similar object.
     * <p>
     * Note: Should not be used. Use {@link #PolicyGroup()} instead.
     * 
     * @param policyGroup
     *            a policy group.
     */
    @Internal
    public PolicyGroup(PolicyGroup policyGroup) {
        this(policyGroup == null ? (String) null : policyGroup.accountId,
             policyGroup == null ? 0 : policyGroup.apikeyCount, policyGroup == null ? 0 : policyGroup.applicationCount,
             policyGroup == null ? new Date() : policyGroup.createdAt,
             policyGroup == null ? (String) null : policyGroup.id,
             policyGroup == null ? (String) null : policyGroup.name,
             policyGroup == null ? new Date() : policyGroup.updatedAt, policyGroup == null ? 0 : policyGroup.userCount);
    }

    /**
     * Constructor.
     */
    public PolicyGroup() {
        this((String) null, 0, 0, new Date(), (String) null, (String) null, new Date(), 0);
    }

    /**
     * Constructor.
     * 
     * <p>
     * Constructor based on object identifier.
     * <p>
     * 
     * @param id
     *            The ID of the group.
     */
    public PolicyGroup(String id) {
        this();
        setId(id);
    }

    /**
     * Internal constructor.
     * 
     * <p>
     * Constructor based on read-only fields.
     * <p>
     * Note: Should not be used. Use {@link #PolicyGroup()} instead.
     * 
     * @param accountId
     *            The ID of the account this group belongs to.
     * @param apikeyCount
     *            The number of API keys in this group.
     * @param applicationCount
     *            The number of applications in this group.
     * @param createdAt
     *            Creation UTC time RFC3339.
     * @param updatedAt
     *            Last update UTC time RFC3339.
     * @param userCount
     *            The number of users in this group.
     */
    @Internal
    public PolicyGroup(String accountId, int apikeyCount, int applicationCount, Date createdAt, Date updatedAt,
                       int userCount) {
        this(accountId, apikeyCount, applicationCount, createdAt, (String) null, (String) null, updatedAt, userCount);
    }

    /**
     * Gets the id of the account this group belongs to.
     * 
     * @return accountId
     */
    public String getAccountId() {
        return accountId;
    }

    /**
     * Gets the number of api keys in this group.
     * 
     * <p>
     * 
     * @deprecated This field has been deprecated since Sat Aug 01 08:00:00 CST 2020 and will be removed by Sun Aug 01
     *             08:00:00 CST 2021. This property is deprecated. See 'application_count' property.
     * 
     * @return apikeyCount
     */
    @Deprecated
    public int getApikeyCount() {
        return apikeyCount;
    }

    /**
     * Gets the number of applications in this group.
     * 
     * @return applicationCount
     */
    public int getApplicationCount() {
        return applicationCount;
    }

    /**
     * Gets creation utc time rfc3339.
     * 
     * @return createdAt
     */
    public Date getCreatedAt() {
        return createdAt;
    }

    /**
     * Gets the id of the group.
     * 
     * @return id
     */
    @Override
    public String getId() {
        return id;
    }

    /**
     * Sets the id of the group.
     * 
     * <p>
     * Note: the length of the string has to match {@code /[a-f0-9]{32}/} to be valid
     * 
     * @param id
     *            The ID of the group.
     */
    @Override
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Sets the id of the group.
     * 
     * <p>
     * Similar to {@link #setId(String)}
     * <p>
     * Note: the length of the string has to match {@code /[a-f0-9]{32}/} to be valid
     * 
     * @param policyGroupId
     *            The ID of the group.
     */
    @Internal
    public void setPolicyGroupId(String policyGroupId) {
        setId(policyGroupId);
    }

    /**
     * Checks whether id value is valid.
     * 
     * @return true if the value is valid; false otherwise.
     */
    @SuppressWarnings("PMD.UselessParentheses")
    public boolean isIdValid() {
        return (id == null || id.matches("[a-f0-9]{32}"));
    }

    /**
     * Gets the name of the group.
     * 
     * @return name
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the name of the group.
     * 
     * <p>
     * Note: the length of the string has to be less than or equal to {@code 100} to be valid
     * 
     * @param name
     *            The name of the group.
     */
    @Required
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Checks whether name value is valid.
     * 
     * @return true if the value is valid; false otherwise.
     */
    @SuppressWarnings("PMD.UselessParentheses")
    public boolean isNameValid() {
        return name != null && (name.length() <= 100);
    }

    /**
     * Gets last update utc time rfc3339.
     * 
     * @return updatedAt
     */
    public Date getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Gets the number of users in this group.
     * 
     * @return userCount
     */
    public int getUserCount() {
        return userCount;
    }

    /**
     * Returns a string representation of the object.
     * 
     * <p>
     * 
     * @see java.lang.Object#toString()
     * @return the string representation
     */
    @Override
    public String toString() {
        return "PolicyGroup [accountId=" + accountId + ", apikeyCount=" + apikeyCount + ", applicationCount="
               + applicationCount + ", createdAt=" + createdAt + ", id=" + id + ", name=" + name + ", updatedAt="
               + updatedAt + ", userCount=" + userCount + "]";
    }

    /**
     * Calculates the hash code of this instance based on field values.
     * 
     * <p>
     * 
     * @see java.lang.Object#hashCode()
     * @return hash code
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((accountId == null) ? 0 : accountId.hashCode());
        result = prime * result + Objects.hashCode(Integer.valueOf(apikeyCount));
        result = prime * result + Objects.hashCode(Integer.valueOf(applicationCount));
        result = prime * result + ((createdAt == null) ? 0 : createdAt.hashCode());
        result = prime * result + ((id == null) ? 0 : id.hashCode());
        result = prime * result + ((name == null) ? 0 : name.hashCode());
        result = prime * result + ((updatedAt == null) ? 0 : updatedAt.hashCode());
        result = prime * result + Objects.hashCode(Integer.valueOf(userCount));
        return result;
    }

    /**
     * Method to ensure {@link #equals(Object)} is correct.
     * 
     * <p>
     * Note: see this article: <a href="https://www.artima.com/lejava/articles/equality.html">canEqual()</a>
     * 
     * @param other
     *            another object.
     * @return true if the other object is an instance of the class in which canEqual is (re)defined, false otherwise.
     */
    protected boolean canEqual(Object other) {
        return other instanceof PolicyGroup;
    }

    /**
     * Indicates whether some other object is "equal to" this one.
     * 
     * <p>
     * 
     * @see java.lang.Object#equals(java.lang.Object)
     * @param obj
     *            an object to compare with this instance.
     * @return true if this object is the same as the obj argument; false otherwise.
     */
    @Override
    @SuppressWarnings({ "PMD.ExcessiveMethodLength", "PMD.NcssMethodCount" })
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (!(obj instanceof PolicyGroup)) {
            return false;
        }
        final PolicyGroup other = (PolicyGroup) obj;
        if (!other.canEqual(this)) {
            return false;
        }
        if (accountId == null) {
            if (other.accountId != null) {
                return false;
            }
        } else if (!accountId.equals(other.accountId)) {
            return false;
        }
        if (apikeyCount != other.apikeyCount) {
            return false;
        }
        if (applicationCount != other.applicationCount) {
            return false;
        }
        if (createdAt == null) {
            if (other.createdAt != null) {
                return false;
            }
        } else if (!createdAt.equals(other.createdAt)) {
            return false;
        }
        if (id == null) {
            if (other.id != null) {
                return false;
            }
        } else if (!id.equals(other.id)) {
            return false;
        }
        if (name == null) {
            if (other.name != null) {
                return false;
            }
        } else if (!name.equals(other.name)) {
            return false;
        }
        if (updatedAt == null) {
            if (other.updatedAt != null) {
                return false;
            }
        } else if (!updatedAt.equals(other.updatedAt)) {
            return false;
        }
        if (userCount != other.userCount) {
            return false;
        }
        return true;
    }

    /**
     * Checks whether the model is valid or not.
     * 
     * <p>
     * 
     * @see SdkModel#isValid()
     * @return true if the model is valid; false otherwise.
     */
    @Override
    public boolean isValid() {
        return isIdValid() && isNameValid();
    }

    /**
     * Clones this instance.
     * 
     * <p>
     * 
     * @see java.lang.Object#clone()
     * @return a cloned instance
     */
    @Override
    public PolicyGroup clone() {
        return new PolicyGroup(this);
    }
}
