// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("3b2c98a6b0d3341e5184f0f766dde798", null, "4a5b89f7-dec9-4c14-8849-a9e36438bd49",
                                  new Date(1610683992637L), -83, null, "e3642.328ec@864e5.me", false,
                                  "7d204941-3680-42a8-a700-e5136e38d0ae", null, "3b2c98a6b0d3341e5184f0f766dde798",
                                  false, false, false, -59, null, null, "11e7e42f-62d4-4d34-88e1-095d5c27ff15", -75,
                                  "ce634207-4304-4743-abbe-cc4fed2de21a", UserStatus.getDefault(), null,
                                  new Date(1610683986738L), "_88=");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("3b2c98a6b0d3341e5184f0f766dde798", null, "ab81d828-e707-4809-a76f-0936f35d98e1",
                                  new Date(1610683990863L), -114, null, "1d3b8.6e6bd@da180.me", false,
                                  "ecbac5e8-e93c-4887-b4da-b6dd4d7facfa", null, "3b2c98a6b0d3341e5184f0f766dde798",
                                  true, false, true, -79, null, null, "34cacd85-e6a1-41d6-8a37-df8c3de4aa0e", 9,
                                  "c51767b4-b84d-4873-918d-6112527dfc83", UserStatus.getDefault(), null,
                                  new Date(1610683989630L), "_88=");
            User user2 = new User("3b2c98a6b0d3341e5184f0f766dde798", null, "ab81d828-e707-4809-a76f-0936f35d98e1",
                                  new Date(1610683990863L), -114, null, "1d3b8.6e6bd@da180.me", false,
                                  "ecbac5e8-e93c-4887-b4da-b6dd4d7facfa", null, "3b2c98a6b0d3341e5184f0f766dde798",
                                  true, false, true, -79, null, null, "34cacd85-e6a1-41d6-8a37-df8c3de4aa0e", 9,
                                  "c51767b4-b84d-4873-918d-6112527dfc83", UserStatus.getDefault(), null,
                                  new Date(1610683989630L), "_88=");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("3b2c98a6b0d3341e5184f0f766dde798", null, "c6b69e03-cabf-4f52-a7e0-eecde4c22245",
                             new Date(1610683987913L), 76, null, "9b45e.76df4@9d6e0.fr", true,
                             "e198d7e1-cd13-4add-9e57-66f719ef31a6", null, "3b2c98a6b0d3341e5184f0f766dde798", false,
                             false, true, -109, null, null, "23b37dd4-1804-4dba-a925-e99559e0d54a", 119,
                             "04c22383-251f-48c0-8d78-4e60edcc3572", UserStatus.getDefault(), null,
                             new Date(1610683991478L), "_88=");
        assertTrue(user.isValid());
        User userInvalid = new User("\u001aëº³@ê©µ@çª¥VUD\u000eA.L=GZâ¼”ä?ºW \u0011\u000fæ•ƒæ³?<R>ëœ²â„??â?£T/<-ç¸­ ì¨Š\u0007Y'ìª¹å?²î—»//,ä”‘X,Q\u000báª”Sê?˜à¸¾=í”—(,ä?–^\u000e",
                                    null, "d887f1b8-be5a-4888-bfb3-ceb81590cd06", new Date(1610683989246L), 51, null,
                                    null, false,
                                    "6301200c-1c77-4692-8b43-ba3bfaf69757fce021cd-ffe8-4b30-b894-663f6a8813edcefc050d-e857-4794-8c3d-7deda43b5209",
                                    null,
                                    "\u001aëº³@ê©µ@çª¥VUD\u000eA.L=GZâ¼”ä?ºW \u0011\u000fæ•ƒæ³?<R>ëœ²â„??â?£T/<-ç¸­ ì¨Š\u0007Y'ìª¹å?²î—»//,ä”‘X,Q\u000báª”Sê?˜à¸¾=í”—(,ä?–^\u000e",
                                    true, false, true, 78, null, null, "dd6802df-a2dd-405f-aafb-b6b74acc02be", -8,
                                    "844b06b0-ed10-4d2b-8c46-a0620cd87d23138afb5c-2e15-46e1-a076-a670b451982fa8274118-e297-4474-87b9-e3768b123273",
                                    UserStatus.getDefault(), null, new Date(1610683986539L),
                                    "\u001bç…†\u0019F<9<;E<@<\u0006Fæ¯ž;'?J\u0011:TT;\u001b:î•º3\u001eS]\u0015ç¥»\u001d\u0001*]3\u0000êˆ§7æ¯•<\u0005:0ïž§E4ç³Ÿ^9^ìš™;ëµ™XV?Iá?¦ïŒ±[");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("3b2c98a6b0d3341e5184f0f766dde798", null, "5d523d14-ee30-408c-a4b6-b022c22d3f30",
                                  new Date(1610683991094L), 72, null, "0a5ee.6170f@ea384.fr", false,
                                  "94d08956-d050-4815-b191-8a41a79ba9fe", null, "3b2c98a6b0d3341e5184f0f766dde798",
                                  false, false, true, 69, null, null, "d9c607c3-aa14-4dc3-849b-1175c0e54473", -32,
                                  "b1586841-2833-4945-a4f5-2a0c8e48fe15", UserStatus.getDefault(), null,
                                  new Date(1610683990706L), "_88=");
            User user2 = new User("3b2c98a6b0d3341e5184f0f766dde798", null, "5d523d14-ee30-408c-a4b6-b022c22d3f30",
                                  new Date(1610683991094L), 72, null, "0a5ee.6170f@ea384.fr", false,
                                  "94d08956-d050-4815-b191-8a41a79ba9fe", null, "3b2c98a6b0d3341e5184f0f766dde798",
                                  false, false, true, 69, null, null, "d9c607c3-aa14-4dc3-849b-1175c0e54473", -32,
                                  "b1586841-2833-4945-a4f5-2a0c8e48fe15", UserStatus.getDefault(), null,
                                  new Date(1610683990706L), "_88=");
            User user3 = new User("3b2c98a6b0d3341e5184f0f766dde798", null, "7780b344-cb8b-429e-b071-72d57b9c4cb3",
                                  new Date(1610683987374L), -50, null, "276aa.b7862@04738.fr", false,
                                  "6f4d1768-2e3d-4d48-b1c7-90c55df2f2d1", null, "3b2c98a6b0d3341e5184f0f766dde798",
                                  false, false, true, -36, null, null, "f2a670b8-8f19-4a44-badf-ee9d6c604a93", 20,
                                  "130e7403-85df-4b33-a108-86c72b2b180b", UserStatus.getDefault(), null,
                                  new Date(1610683985472L), "_88=");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
