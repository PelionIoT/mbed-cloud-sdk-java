// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("b118c.0834d@ce0c7.fr",
                                                             "aceedd1f-0f1e-487d-9d5e-f915881a1b16",
                                                             "3b2c98a6b0d3341e5184f0f766dde798");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("ca0ba.8c1ee@3f7b4.fr",
                                                             "ff571029-d377-4755-9d6f-aa8cad236ad1",
                                                             "3b2c98a6b0d3341e5184f0f766dde798");
            ParentAccount parentaccount2 = new ParentAccount("ca0ba.8c1ee@3f7b4.fr",
                                                             "ff571029-d377-4755-9d6f-aa8cad236ad1",
                                                             "3b2c98a6b0d3341e5184f0f766dde798");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("0507f.d1036@758d0.me", "9f20057c-8c3a-41cc-a2af-7fd30d675337",
                                                        "3b2c98a6b0d3341e5184f0f766dde798");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("áŒ²â³Šæ¦‹ì—« ìªž5æ‘€%!ï» ç½†;>>â‚§æ©´ï¾‹1Í¢Þ‘æ£¸-3è—¡è¤…\u0013èœ‡ï‰¸â–‡é±ƒï½??ï½¢!â‚¥ä¤?å?Š è›°ì¹¹ +â¸–ï°‚æ†?4æ°‚ä¾‰ï½¯æ¤¬æ¥”íŸŽ#>êŸ?:æ?ªç¤?!ï¢µåŠžï­?ëŽ“",
                                                               "5553c57d-06a2-4453-acf6-31a0d20ea25d11d79ddc-7f2a-428c-9165-f637d5a9af5c39f9bd3d-d30c-434a-83c4-adb565ed9f55",
                                                               "\u001aëº³@ê©µ@çª¥VUD\u000eA.L=GZâ¼”ä?ºW \u0011\u000fæ•ƒæ³?<R>ëœ²â„??â?£T/<-ç¸­ ì¨Š\u0007Y'ìª¹å?²î—»//,ä”‘X,Q\u000báª”Sê?˜à¸¾=í”—(,ä?–^\u000e");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("427ac.43180@2f0fe.fr",
                                                             "be22965c-071f-472f-8452-22f2d2b82d3c",
                                                             "3b2c98a6b0d3341e5184f0f766dde798");
            ParentAccount parentaccount2 = new ParentAccount("427ac.43180@2f0fe.fr",
                                                             "be22965c-071f-472f-8452-22f2d2b82d3c",
                                                             "3b2c98a6b0d3341e5184f0f766dde798");
            ParentAccount parentaccount3 = new ParentAccount("c444b.75f68@30164.fr",
                                                             "9bdeb49f-ce45-4d56-b482-70f2c152598c",
                                                             "3b2c98a6b0d3341e5184f0f766dde798");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
