// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model OidcRequestClaimMapping.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestOidcRequestClaimMapping {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            OidcRequestClaimMapping oidcrequestclaimmapping1 = new OidcRequestClaimMapping("59585.6c5f7@51ee9.me",
                                                                                           "c3cc4.515f8@2d905.fr",
                                                                                           "cfc1edf7-3537-4443-80fd-a1ff0d60ea7a",
                                                                                           "ba9b3622-4d18-49ec-b455-779cdd72410a",
                                                                                           "9d9ea707-b697-468c-8922-026d3e785d21",
                                                                                           "d7854364-9b30-4afb-923f-f92851b746bc",
                                                                                           "3e3316aa-dcc3-4a30-a88b-11028eff8def",
                                                                                           "28d895f1-216e-4b6b-b3da-35e56fc4cdc4",
                                                                                           "bbc72be4-e0c3-4b5b-8d87-088c9003ce47");
            OidcRequestClaimMapping oidcrequestclaimmapping2 = oidcrequestclaimmapping1.clone();
            assertNotNull(oidcrequestclaimmapping1);
            assertNotNull(oidcrequestclaimmapping2);
            assertNotSame(oidcrequestclaimmapping2, oidcrequestclaimmapping1);
            assertEquals(oidcrequestclaimmapping2, oidcrequestclaimmapping1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            OidcRequestClaimMapping oidcrequestclaimmapping1 = new OidcRequestClaimMapping("5212b.fa342@91018.me",
                                                                                           "95fe3.62196@60d81.fr",
                                                                                           "1333ca67-253b-4a1b-adfa-c607b9284217",
                                                                                           "41aa1d93-0dc9-425e-8c35-23a91e006d57",
                                                                                           "75c73d18-4025-46a4-9aa3-b696b33ad861",
                                                                                           "6e90d31b-796d-4222-b6fe-ccd5d0877bea",
                                                                                           "44ac672e-81c4-43c1-8b39-47a828e17020",
                                                                                           "3570a1c7-38c1-4bee-9147-960f5b523af1",
                                                                                           "4ffb1d26-896d-44c3-b993-68b9ac78b3a8");
            OidcRequestClaimMapping oidcrequestclaimmapping2 = new OidcRequestClaimMapping("5212b.fa342@91018.me",
                                                                                           "95fe3.62196@60d81.fr",
                                                                                           "1333ca67-253b-4a1b-adfa-c607b9284217",
                                                                                           "41aa1d93-0dc9-425e-8c35-23a91e006d57",
                                                                                           "75c73d18-4025-46a4-9aa3-b696b33ad861",
                                                                                           "6e90d31b-796d-4222-b6fe-ccd5d0877bea",
                                                                                           "44ac672e-81c4-43c1-8b39-47a828e17020",
                                                                                           "3570a1c7-38c1-4bee-9147-960f5b523af1",
                                                                                           "4ffb1d26-896d-44c3-b993-68b9ac78b3a8");
            assertNotNull(oidcrequestclaimmapping1);
            assertNotNull(oidcrequestclaimmapping2);
            assertNotSame(oidcrequestclaimmapping2, oidcrequestclaimmapping1);
            assertEquals(oidcrequestclaimmapping2, oidcrequestclaimmapping1);
            assertEquals(oidcrequestclaimmapping2.hashCode(), oidcrequestclaimmapping1.hashCode());
            int hashCode = oidcrequestclaimmapping1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, oidcrequestclaimmapping1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        OidcRequestClaimMapping oidcrequestclaimmapping = new OidcRequestClaimMapping("d65a6.1788b@ad8d2.me",
                                                                                      "bb043.5217f@ee9b7.me",
                                                                                      "c54e682e-e049-41d8-bc5d-9be60a10a80e",
                                                                                      "f9b5088c-827e-4102-8301-6dcb4bbd0272",
                                                                                      "d5738047-ee03-4ed3-96bf-0908f5c3afb1",
                                                                                      "3da7de18-4bac-44c8-be89-9f620b781100",
                                                                                      "6c6e71a6-4eb9-47f5-831c-7069da356643",
                                                                                      "32cadc56-9263-4fb7-a74f-2081f618d8d8",
                                                                                      "1bcf2c19-9075-4c3f-9dc4-caa53bc290cd");
        assertTrue(oidcrequestclaimmapping.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            OidcRequestClaimMapping oidcrequestclaimmapping1 = new OidcRequestClaimMapping("0a4d3.47300@21c35.fr",
                                                                                           "d78a2.44df6@a544a.me",
                                                                                           "dd33b46e-402b-4206-a45e-c0b2edf985a5",
                                                                                           "c4fa7fcb-b5fa-4a14-859a-894919470c7b",
                                                                                           "6fb31765-5a8e-4a20-a6e8-4db5e3eb2e70",
                                                                                           "fa3921db-d5cb-40c3-bfcf-d011d11b92dd",
                                                                                           "eab5a7d6-b11a-4768-8b46-78d514252c45",
                                                                                           "e9377f60-6f11-475d-9f5e-73bb7535d3db",
                                                                                           "26c21693-d79e-4c14-8dce-4d7ff57fe581");
            OidcRequestClaimMapping oidcrequestclaimmapping2 = new OidcRequestClaimMapping("0a4d3.47300@21c35.fr",
                                                                                           "d78a2.44df6@a544a.me",
                                                                                           "dd33b46e-402b-4206-a45e-c0b2edf985a5",
                                                                                           "c4fa7fcb-b5fa-4a14-859a-894919470c7b",
                                                                                           "6fb31765-5a8e-4a20-a6e8-4db5e3eb2e70",
                                                                                           "fa3921db-d5cb-40c3-bfcf-d011d11b92dd",
                                                                                           "eab5a7d6-b11a-4768-8b46-78d514252c45",
                                                                                           "e9377f60-6f11-475d-9f5e-73bb7535d3db",
                                                                                           "26c21693-d79e-4c14-8dce-4d7ff57fe581");
            OidcRequestClaimMapping oidcrequestclaimmapping3 = new OidcRequestClaimMapping("ab1c4.caeb0@1a281.me",
                                                                                           "da040.fb202@136bf.me",
                                                                                           "42a6619f-629b-46ea-a6df-65c81aa28483",
                                                                                           "b99f38c9-cc06-4595-ae2b-6a8981da67a0",
                                                                                           "95035939-af30-488f-ba9a-c4137491be1e",
                                                                                           "9350153d-ef84-46c7-beca-f9c04347923e",
                                                                                           "7e85236c-b958-44bc-90fb-d949b951dede",
                                                                                           "32aeab42-a7ae-4376-8e7c-d35e2ead722e",
                                                                                           "5f6db9e2-034a-4bb3-bba6-5affef907408");
            assertNotNull(oidcrequestclaimmapping1);
            assertNotNull(oidcrequestclaimmapping2);
            assertNotNull(oidcrequestclaimmapping3);
            assertNotSame(oidcrequestclaimmapping2, oidcrequestclaimmapping1);
            assertNotSame(oidcrequestclaimmapping3, oidcrequestclaimmapping1);
            assertEquals(oidcrequestclaimmapping2, oidcrequestclaimmapping1);
            assertEquals(oidcrequestclaimmapping2, oidcrequestclaimmapping1);
            assertEquals(oidcrequestclaimmapping1, oidcrequestclaimmapping2);
            assertEquals(oidcrequestclaimmapping1, oidcrequestclaimmapping1);
            assertFalse(oidcrequestclaimmapping1.equals(null));
            assertNotEquals(oidcrequestclaimmapping3, oidcrequestclaimmapping1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
