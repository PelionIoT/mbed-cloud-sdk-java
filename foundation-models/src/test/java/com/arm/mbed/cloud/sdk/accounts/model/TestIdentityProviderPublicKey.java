// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model IdentityProviderPublicKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestIdentityProviderPublicKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            IdentityProviderPublicKey identityproviderpublickey1 = new IdentityProviderPublicKey("41684f43-0be9-4334-98ad-520cd21cdfbc",
                                                                                                 "f1285e8f-3e07-474b-80f5-869c2a91fa01");
            IdentityProviderPublicKey identityproviderpublickey2 = identityproviderpublickey1.clone();
            assertNotNull(identityproviderpublickey1);
            assertNotNull(identityproviderpublickey2);
            assertNotSame(identityproviderpublickey2, identityproviderpublickey1);
            assertEquals(identityproviderpublickey2, identityproviderpublickey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            IdentityProviderPublicKey identityproviderpublickey1 = new IdentityProviderPublicKey("a72ee846-39ed-4a79-81fa-71576373a63a",
                                                                                                 "11a3b475-6067-436a-8c9c-68191ce19ba5");
            IdentityProviderPublicKey identityproviderpublickey2 = new IdentityProviderPublicKey("a72ee846-39ed-4a79-81fa-71576373a63a",
                                                                                                 "11a3b475-6067-436a-8c9c-68191ce19ba5");
            assertNotNull(identityproviderpublickey1);
            assertNotNull(identityproviderpublickey2);
            assertNotSame(identityproviderpublickey2, identityproviderpublickey1);
            assertEquals(identityproviderpublickey2, identityproviderpublickey1);
            assertEquals(identityproviderpublickey2.hashCode(), identityproviderpublickey1.hashCode());
            int hashCode = identityproviderpublickey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, identityproviderpublickey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        IdentityProviderPublicKey identityproviderpublickey = new IdentityProviderPublicKey("d16ce93a-de27-43c2-b915-2b83ffc46575",
                                                                                            "692f1ba1-7a45-4f56-887c-477f9e6e6ffa");
        assertTrue(identityproviderpublickey.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            IdentityProviderPublicKey identityproviderpublickey1 = new IdentityProviderPublicKey("850ac8bb-6332-4cc9-8afa-f6cfcb0d2d14",
                                                                                                 "a1d9c06f-c28d-4d32-abd7-4ae3c0657cfc");
            IdentityProviderPublicKey identityproviderpublickey2 = new IdentityProviderPublicKey("850ac8bb-6332-4cc9-8afa-f6cfcb0d2d14",
                                                                                                 "a1d9c06f-c28d-4d32-abd7-4ae3c0657cfc");
            IdentityProviderPublicKey identityproviderpublickey3 = new IdentityProviderPublicKey("6ea7381e-2407-4366-a510-9c2856f55438",
                                                                                                 "a5b30c94-432f-4e98-91be-11f6c2f7bec7");
            assertNotNull(identityproviderpublickey1);
            assertNotNull(identityproviderpublickey2);
            assertNotNull(identityproviderpublickey3);
            assertNotSame(identityproviderpublickey2, identityproviderpublickey1);
            assertNotSame(identityproviderpublickey3, identityproviderpublickey1);
            assertEquals(identityproviderpublickey2, identityproviderpublickey1);
            assertEquals(identityproviderpublickey2, identityproviderpublickey1);
            assertEquals(identityproviderpublickey1, identityproviderpublickey2);
            assertEquals(identityproviderpublickey1, identityproviderpublickey1);
            assertFalse(identityproviderpublickey1.equals(null));
            assertNotEquals(identityproviderpublickey3, identityproviderpublickey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
