// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("8a6eb3d4-d0ba-4df9-863e-3be4f485d591",
                                                                                  "a9718802-0368-4293-92b7-612c88b3fb7c",
                                                                                  new Date(1610683993966L),
                                                                                  "e407a94b-38c8-47df-aa59-867f4c51ef38",
                                                                                  "967a380f-5b28-451c-9c89-51663db3b398",
                                                                                  "67a85e02-b694-4c67-825b-9dec571c0697",
                                                                                  "42d10b99-c794-404f-a957-6c81a2d94cdf",
                                                                                  "a84e4946-6ed8-4d3b-bf80-1266dff1b0dc");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("a72919d3-4968-4616-9c6a-3cd4297e0b0c",
                                                                                  "2beb5ed0-419d-41b3-8fcd-b40d996d3bcc",
                                                                                  new Date(1610683993293L),
                                                                                  "e35402d7-bae6-47cc-a9d9-6044e2742bf3",
                                                                                  "c35707a6-3f4c-4d71-bab4-b8242a862f20",
                                                                                  "343ccba1-3ef0-4b33-aa53-3c837b9001fe",
                                                                                  "54d5351f-ea95-4dc4-b2d0-84bd5679cb8a",
                                                                                  "81072ea3-317d-4817-b83f-06c70028cdc7");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("a72919d3-4968-4616-9c6a-3cd4297e0b0c",
                                                                                  "2beb5ed0-419d-41b3-8fcd-b40d996d3bcc",
                                                                                  new Date(1610683993293L),
                                                                                  "e35402d7-bae6-47cc-a9d9-6044e2742bf3",
                                                                                  "c35707a6-3f4c-4d71-bab4-b8242a862f20",
                                                                                  "343ccba1-3ef0-4b33-aa53-3c837b9001fe",
                                                                                  "54d5351f-ea95-4dc4-b2d0-84bd5679cb8a",
                                                                                  "81072ea3-317d-4817-b83f-06c70028cdc7");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("c929fe0d-3ba8-4361-8b9a-8fd4b516dc09",
                                                                             "8593169b-89ba-48d8-84c5-3f7f0f47b581",
                                                                             new Date(1610683988246L),
                                                                             "12de8561-0db5-4ce4-b7e6-2554994ba793",
                                                                             "a760c52b-ca38-41bc-b9ea-af38a6387cef",
                                                                             "bc1a648a-52d3-45ff-b907-4ee0450b4898",
                                                                             "63ef1039-4679-4f2e-949f-61a2e7eeb707",
                                                                             "a5f450b2-98bb-4ed8-8f5b-61389f771a13");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("98e74597-c9f1-440e-b142-2105940c3b17",
                                                                                    "832fe589-028e-4ca7-8ab5-0439a0b84c89",
                                                                                    new Date(1610683989943L),
                                                                                    "ba804a63-af90-47f5-95d5-bc16ad5333f9",
                                                                                    "74e1f273-4b1d-416e-a388-621c60ff0728",
                                                                                    "96a11d2d-289f-4e41-bd30-5de701a4e916",
                                                                                    null,
                                                                                    "6a94a6d3-e7a3-4471-a50d-d08ba3981c39");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("fc6df9be-8cef-44cc-9eb7-af2fb2756312",
                                                                                  "182f735f-f58c-4159-a53e-06c9c8e71cd8",
                                                                                  new Date(1610683988241L),
                                                                                  "cb2f7a98-096f-46fe-a42e-5d0d1af8eb30",
                                                                                  "bf923a47-5cbc-4b7c-85c8-615eaa217674",
                                                                                  "a33d884d-75bd-49ee-ac3f-50fbead36384",
                                                                                  "410c9d7c-3324-4de8-81a8-4c397b542bf0",
                                                                                  "bde1efe3-1a64-4dbd-b8b6-8ab15442d405");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("fc6df9be-8cef-44cc-9eb7-af2fb2756312",
                                                                                  "182f735f-f58c-4159-a53e-06c9c8e71cd8",
                                                                                  new Date(1610683988241L),
                                                                                  "cb2f7a98-096f-46fe-a42e-5d0d1af8eb30",
                                                                                  "bf923a47-5cbc-4b7c-85c8-615eaa217674",
                                                                                  "a33d884d-75bd-49ee-ac3f-50fbead36384",
                                                                                  "410c9d7c-3324-4de8-81a8-4c397b542bf0",
                                                                                  "bde1efe3-1a64-4dbd-b8b6-8ab15442d405");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("9671faa8-2cc6-4ba8-882b-6b76ca38c097",
                                                                                  "384a150f-5523-4938-ba92-43f92f67b59e",
                                                                                  new Date(1610683987342L),
                                                                                  "e4150b9c-c716-4622-82ff-9c7d2954342f",
                                                                                  "960d2152-a83f-4921-9619-81667a276719",
                                                                                  "8417cd51-a44a-4502-a031-57c6ee9cd7e7",
                                                                                  "1ef4fe38-49f0-47bb-90b2-50be82e3201c",
                                                                                  "0b9b9517-a985-4a17-a90a-4d958617b38c");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
