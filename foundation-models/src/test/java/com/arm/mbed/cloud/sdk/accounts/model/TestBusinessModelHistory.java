// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model BusinessModelHistory.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestBusinessModelHistory {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            BusinessModelHistory businessmodelhistory1 = new BusinessModelHistory("05b4843c-3f18-4499-beff-be91e2a21183",
                                                                                  new Date(1610683985565L));
            BusinessModelHistory businessmodelhistory2 = businessmodelhistory1.clone();
            assertNotNull(businessmodelhistory1);
            assertNotNull(businessmodelhistory2);
            assertNotSame(businessmodelhistory2, businessmodelhistory1);
            assertEquals(businessmodelhistory2, businessmodelhistory1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            BusinessModelHistory businessmodelhistory1 = new BusinessModelHistory("bbaf3afb-05b5-4ec2-9590-5ab692fec7d9",
                                                                                  new Date(1610683985416L));
            BusinessModelHistory businessmodelhistory2 = new BusinessModelHistory("bbaf3afb-05b5-4ec2-9590-5ab692fec7d9",
                                                                                  new Date(1610683985416L));
            assertNotNull(businessmodelhistory1);
            assertNotNull(businessmodelhistory2);
            assertNotSame(businessmodelhistory2, businessmodelhistory1);
            assertEquals(businessmodelhistory2, businessmodelhistory1);
            assertEquals(businessmodelhistory2.hashCode(), businessmodelhistory1.hashCode());
            int hashCode = businessmodelhistory1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, businessmodelhistory1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        BusinessModelHistory businessmodelhistory = new BusinessModelHistory("b6807d39-6457-4246-8b3c-56ec022bdc1a",
                                                                             new Date(1610683991128L));
        assertTrue(businessmodelhistory.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            BusinessModelHistory businessmodelhistory1 = new BusinessModelHistory("9f6c1207-45cc-480c-8357-b8119168a4ef",
                                                                                  new Date(1610683993633L));
            BusinessModelHistory businessmodelhistory2 = new BusinessModelHistory("9f6c1207-45cc-480c-8357-b8119168a4ef",
                                                                                  new Date(1610683993633L));
            BusinessModelHistory businessmodelhistory3 = new BusinessModelHistory("9fe022af-b559-4006-8743-f2290fb8534d",
                                                                                  new Date(1610683987752L));
            assertNotNull(businessmodelhistory1);
            assertNotNull(businessmodelhistory2);
            assertNotNull(businessmodelhistory3);
            assertNotSame(businessmodelhistory2, businessmodelhistory1);
            assertNotSame(businessmodelhistory3, businessmodelhistory1);
            assertEquals(businessmodelhistory2, businessmodelhistory1);
            assertEquals(businessmodelhistory2, businessmodelhistory1);
            assertEquals(businessmodelhistory1, businessmodelhistory2);
            assertEquals(businessmodelhistory1, businessmodelhistory1);
            assertFalse(businessmodelhistory1.equals(null));
            assertNotEquals(businessmodelhistory3, businessmodelhistory1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
