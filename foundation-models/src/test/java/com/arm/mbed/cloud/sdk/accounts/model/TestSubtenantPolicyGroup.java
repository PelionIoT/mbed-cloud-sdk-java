// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantPolicyGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantPolicyGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("3b2c98a6b0d3341e5184f0f766dde798",
                                                                                  -25, -89, new Date(1610683992170L),
                                                                                  "3b2c98a6b0d3341e5184f0f766dde798",
                                                                                  "40151933-77c6-4c97-a261-256ea6336b49",
                                                                                  new Date(1610683988043L), 19);
            SubtenantPolicyGroup subtenantpolicygroup2 = subtenantpolicygroup1.clone();
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("3b2c98a6b0d3341e5184f0f766dde798",
                                                                                  -18, 117, new Date(1610683990747L),
                                                                                  "3b2c98a6b0d3341e5184f0f766dde798",
                                                                                  "e05a5022-6ac9-436c-86bd-3acc596967dd",
                                                                                  new Date(1610683988292L), -89);
            SubtenantPolicyGroup subtenantpolicygroup2 = new SubtenantPolicyGroup("3b2c98a6b0d3341e5184f0f766dde798",
                                                                                  -18, 117, new Date(1610683990747L),
                                                                                  "3b2c98a6b0d3341e5184f0f766dde798",
                                                                                  "e05a5022-6ac9-436c-86bd-3acc596967dd",
                                                                                  new Date(1610683988292L), -89);
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2.hashCode(), subtenantpolicygroup1.hashCode());
            int hashCode = subtenantpolicygroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantpolicygroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantPolicyGroup subtenantpolicygroup = new SubtenantPolicyGroup("3b2c98a6b0d3341e5184f0f766dde798", 18,
                                                                             -32, new Date(1610683993027L),
                                                                             "3b2c98a6b0d3341e5184f0f766dde798",
                                                                             "e38b3382-bea0-41b8-b1f1-7e2bd99cb3c3",
                                                                             new Date(1610683985837L), -116);
        assertTrue(subtenantpolicygroup.isValid());
        SubtenantPolicyGroup subtenantpolicygroupInvalid = new SubtenantPolicyGroup(null, 114, 55,
                                                                                    new Date(1610683995016L),
                                                                                    "\u001aëº³@ê©µ@çª¥VUD\u000eA.L=GZâ¼”ä?ºW \u0011\u000fæ•ƒæ³?<R>ëœ²â„??â?£T/<-ç¸­ ì¨Š\u0007Y'ìª¹å?²î—»//,ä”‘X,Q\u000báª”Sê?˜à¸¾=í”—(,ä?–^\u000e",
                                                                                    null, new Date(1610683989689L),
                                                                                    -107);
        assertFalse(subtenantpolicygroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("3b2c98a6b0d3341e5184f0f766dde798",
                                                                                  -124, 61, new Date(1610683993719L),
                                                                                  "3b2c98a6b0d3341e5184f0f766dde798",
                                                                                  "24130a4d-69f5-4181-9f1d-78025c9b37d6",
                                                                                  new Date(1610683990678L), -42);
            SubtenantPolicyGroup subtenantpolicygroup2 = new SubtenantPolicyGroup("3b2c98a6b0d3341e5184f0f766dde798",
                                                                                  -124, 61, new Date(1610683993719L),
                                                                                  "3b2c98a6b0d3341e5184f0f766dde798",
                                                                                  "24130a4d-69f5-4181-9f1d-78025c9b37d6",
                                                                                  new Date(1610683990678L), -42);
            SubtenantPolicyGroup subtenantpolicygroup3 = new SubtenantPolicyGroup("3b2c98a6b0d3341e5184f0f766dde798",
                                                                                  -37, 85, new Date(1610683987063L),
                                                                                  "3b2c98a6b0d3341e5184f0f766dde798",
                                                                                  "6047ff8b-f3a9-4643-a815-73aa7fd75e75",
                                                                                  new Date(1610683990923L), 24);
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotNull(subtenantpolicygroup3);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertNotSame(subtenantpolicygroup3, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup1, subtenantpolicygroup2);
            assertEquals(subtenantpolicygroup1, subtenantpolicygroup1);
            assertFalse(subtenantpolicygroup1.equals(null));
            assertNotEquals(subtenantpolicygroup3, subtenantpolicygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
