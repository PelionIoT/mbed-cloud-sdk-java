// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("3b2c98a6b0d3341e5184f0f766dde798",
                                                                   new Date(1610683995190L), 32, null,
                                                                   "3b2c98a6b0d3341e5184f0f766dde798",
                                                                   "6c0f8fd2-5c2a-422e-a50f-46091c71cb65", -66,
                                                                   "e103206c-0160-4b83-bf64-82890b1dcdd7",
                                                                   "3b2c98a6b0d3341e5184f0f766dde798",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1610683992082L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("3b2c98a6b0d3341e5184f0f766dde798",
                                                                   new Date(1610683989530L), -110, null,
                                                                   "3b2c98a6b0d3341e5184f0f766dde798",
                                                                   "4f208173-a66a-4655-9743-75b62fe320f6", -120,
                                                                   "c74d660d-7045-43db-b029-9d270ff29e9b",
                                                                   "3b2c98a6b0d3341e5184f0f766dde798",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1610683985629L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("3b2c98a6b0d3341e5184f0f766dde798",
                                                                   new Date(1610683989530L), -110, null,
                                                                   "3b2c98a6b0d3341e5184f0f766dde798",
                                                                   "4f208173-a66a-4655-9743-75b62fe320f6", -120,
                                                                   "c74d660d-7045-43db-b029-9d270ff29e9b",
                                                                   "3b2c98a6b0d3341e5184f0f766dde798",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1610683985629L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("3b2c98a6b0d3341e5184f0f766dde798",
                                                              new Date(1610683989452L), 49, null,
                                                              "3b2c98a6b0d3341e5184f0f766dde798",
                                                              "23824bc8-106b-4080-8941-557294cb8df4", 49,
                                                              "fa132d33-6431-4a9f-a4d3-7d9e2d036adb",
                                                              "3b2c98a6b0d3341e5184f0f766dde798",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1610683993839L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1610683988185L), 86, null,
                                                                     "\u001aëº³@ê©µ@çª¥VUD\u000eA.L=GZâ¼”ä?ºW \u0011\u000fæ•ƒæ³?<R>ëœ²â„??â?£T/<-ç¸­ ì¨Š\u0007Y'ìª¹å?²î—»//,ä”‘X,Q\u000báª”Sê?˜à¸¾=í”—(,ä?–^\u000e",
                                                                     "b7ae25ae-6ec3-44c5-a61d-b0f98b03414b", -60, null,
                                                                     "\u001aëº³@ê©µ@çª¥VUD\u000eA.L=GZâ¼”ä?ºW \u0011\u000fæ•ƒæ³?<R>ëœ²â„??â?£T/<-ç¸­ ì¨Š\u0007Y'ìª¹å?²î—»//,ä”‘X,Q\u000báª”Sê?˜à¸¾=í”—(,ä?–^\u000e",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1610683989085L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("3b2c98a6b0d3341e5184f0f766dde798",
                                                                   new Date(1610683987619L), 25, null,
                                                                   "3b2c98a6b0d3341e5184f0f766dde798",
                                                                   "c7be1e17-e043-465e-bc31-5bcdae5e6d1c", 97,
                                                                   "c19a8b06-ea50-448d-a208-b2c91e18db13",
                                                                   "3b2c98a6b0d3341e5184f0f766dde798",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1610683986460L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("3b2c98a6b0d3341e5184f0f766dde798",
                                                                   new Date(1610683987619L), 25, null,
                                                                   "3b2c98a6b0d3341e5184f0f766dde798",
                                                                   "c7be1e17-e043-465e-bc31-5bcdae5e6d1c", 97,
                                                                   "c19a8b06-ea50-448d-a208-b2c91e18db13",
                                                                   "3b2c98a6b0d3341e5184f0f766dde798",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1610683986460L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("3b2c98a6b0d3341e5184f0f766dde798",
                                                                   new Date(1610683994080L), -124, null,
                                                                   "3b2c98a6b0d3341e5184f0f766dde798",
                                                                   "1b7588a9-78f3-4527-857c-88451aa60987", 7,
                                                                   "66e56c84-95eb-431d-9da0-a9a976c562b1",
                                                                   "3b2c98a6b0d3341e5184f0f766dde798",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1610683987598L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
