/*
 * Pelion Device Management API
 * Pelion Device Management API build from the publicly defined API definitions.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * Represents an API key in requests towards Device Management.
 */
@ApiModel(description = "Represents an API key in requests towards Device Management.")

public class ApiKeyUpdateReq implements Serializable {
    private static final long serialVersionUID = 1L;

    @SerializedName("groups")
    private List<String> groups = null;

    @SerializedName("name")
    private String name = null;

    @SerializedName("owner")
    private String owner = null;

    /**
     * The status of the API key. Only the owner of the API key or an administrator can update the status of an API key.
     */
    @JsonAdapter(StatusEnum.Adapter.class)
    public enum StatusEnum {
        ACTIVE("ACTIVE"),

        INACTIVE("INACTIVE");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static StatusEnum fromValue(String text) {
            for (StatusEnum b : StatusEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<StatusEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public StatusEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return StatusEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("status")
    private StatusEnum status = null;

    public ApiKeyUpdateReq groups(List<String> groups) {
        this.groups = groups;
        return this;
    }

    public ApiKeyUpdateReq addGroupsItem(String groupsItem) {
        if (this.groups == null) {
            this.groups = new ArrayList<String>();
        }
        this.groups.add(groupsItem);
        return this;
    }

    /**
     * A list of group IDs this API key belongs to. Only an administrator can update the group membership of an API key.
     * 
     * @return groups
     **/
    @ApiModelProperty(value = "A list of group IDs this API key belongs to. Only an administrator can update the group membership of an API key.")
    public List<String> getGroups() {
        return groups;
    }

    public void setGroups(List<String> groups) {
        this.groups = groups;
    }

    public ApiKeyUpdateReq name(String name) {
        this.name = name;
        return this;
    }

    /**
     * The display name for the API key.
     * 
     * @return name
     **/
    @ApiModelProperty(value = "The display name for the API key.")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public ApiKeyUpdateReq owner(String owner) {
        this.owner = owner;
        return this;
    }

    /**
     * The owner of this API key. Only an administrator can update the owner of an API key.
     * 
     * @return owner
     **/
    @ApiModelProperty(value = "The owner of this API key. Only an administrator can update the owner of an API key.")
    public String getOwner() {
        return owner;
    }

    public void setOwner(String owner) {
        this.owner = owner;
    }

    public ApiKeyUpdateReq status(StatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * The status of the API key. Only the owner of the API key or an administrator can update the status of an API key.
     * 
     * @return status
     **/
    @ApiModelProperty(value = "The status of the API key. Only the owner of the API key or an administrator can update the status of an API key.")
    public StatusEnum getStatus() {
        return status;
    }

    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ApiKeyUpdateReq apiKeyUpdateReq = (ApiKeyUpdateReq) o;
        return Objects.equals(this.groups, apiKeyUpdateReq.groups) && Objects.equals(this.name, apiKeyUpdateReq.name)
               && Objects.equals(this.owner, apiKeyUpdateReq.owner)
               && Objects.equals(this.status, apiKeyUpdateReq.status);
    }

    @Override
    public int hashCode() {
        return Objects.hash(groups, name, owner, status);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ApiKeyUpdateReq {\n");

        sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
