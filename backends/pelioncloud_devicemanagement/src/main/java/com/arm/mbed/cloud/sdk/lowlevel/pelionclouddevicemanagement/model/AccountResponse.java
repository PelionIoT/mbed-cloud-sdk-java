/*
 * Pelion Device Management API
 * Pelion Device Management API build from the publicly defined API definitions.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * This object represents an account in responses.
 */
@ApiModel(description = "This object represents an account in responses.")

public class AccountResponse implements Serializable {
    private static final long serialVersionUID = 1L;

    @SerializedName("alias")
    private String alias = null;

    @SerializedName("display_name")
    private String displayName = null;

    @SerializedName("id")
    private String id = null;

    @SerializedName("login_profiles")
    private List<LoginProfile> loginProfiles = null;

    @SerializedName("parent_id")
    private String parentId = null;

    /**
     * The status of the account.
     */
    @JsonAdapter(StatusEnum.Adapter.class)
    public enum StatusEnum {
        ENROLLING("ENROLLING"),

        ACTIVE("ACTIVE"),

        RESTRICTED("RESTRICTED"),

        SUSPENDED("SUSPENDED");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static StatusEnum fromValue(String text) {
            for (StatusEnum b : StatusEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<StatusEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public StatusEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return StatusEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("status")
    private StatusEnum status = null;

    /**
     * Alias of the account.
     * 
     * @return alias
     **/
    @ApiModelProperty(example = "cust-314159", value = "Alias of the account.")
    public String getAlias() {
        return alias;
    }

    /**
     * The display name for the account.
     * 
     * @return displayName
     **/
    @ApiModelProperty(example = "Customer 3.14159", value = "The display name for the account.")
    public String getDisplayName() {
        return displayName;
    }

    /**
     * The UUID of the account.
     * 
     * @return id
     **/
    @ApiModelProperty(example = "01619571e2e90242ac12000600000000", value = "The UUID of the account.")
    public String getId() {
        return id;
    }

    public AccountResponse loginProfiles(List<LoginProfile> loginProfiles) {
        this.loginProfiles = loginProfiles;
        return this;
    }

    public AccountResponse addLoginProfilesItem(LoginProfile loginProfilesItem) {
        if (this.loginProfiles == null) {
            this.loginProfiles = new ArrayList<LoginProfile>();
        }
        this.loginProfiles.add(loginProfilesItem);
        return this;
    }

    /**
     * A list of login profiles for the user in the account.
     * 
     * @return loginProfiles
     **/
    @ApiModelProperty(value = "A list of login profiles for the user in the account.")
    public List<LoginProfile> getLoginProfiles() {
        return loginProfiles;
    }

    public void setLoginProfiles(List<LoginProfile> loginProfiles) {
        this.loginProfiles = loginProfiles;
    }

    /**
     * The UUID of the parent account, if it has any.
     * 
     * @return parentId
     **/
    @ApiModelProperty(example = "01619571f3c00242ac12000600000000",
                      value = "The UUID of the parent account, if it has any.")
    public String getParentId() {
        return parentId;
    }

    /**
     * The status of the account.
     * 
     * @return status
     **/
    @ApiModelProperty(example = "ACTIVE", value = "The status of the account.")
    public StatusEnum getStatus() {
        return status;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AccountResponse accountResponse = (AccountResponse) o;
        return Objects.equals(this.alias, accountResponse.alias)
               && Objects.equals(this.displayName, accountResponse.displayName)
               && Objects.equals(this.id, accountResponse.id)
               && Objects.equals(this.loginProfiles, accountResponse.loginProfiles)
               && Objects.equals(this.parentId, accountResponse.parentId)
               && Objects.equals(this.status, accountResponse.status);
    }

    @Override
    public int hashCode() {
        return Objects.hash(alias, displayName, id, loginProfiles, parentId, status);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AccountResponse {\n");

        sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
        sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    loginProfiles: ").append(toIndentedString(loginProfiles)).append("\n");
        sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
