/*
 * Pelion Device Management API
 * Pelion Device Management API build from the publicly defined API definitions.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.joda.time.DateTime;
import java.io.Serializable;

/**
 * Represents a trusted certificate in responses.
 */
@ApiModel(description = "Represents a trusted certificate in responses.")

public class TrustedCertificateResp implements Serializable {
    private static final long serialVersionUID = 1L;

    @SerializedName("account_id")
    private String accountId = null;

    @SerializedName("certificate")
    private String certificate = null;

    @SerializedName("certificate_fingerprint")
    private String certificateFingerprint = null;

    @SerializedName("created_at")
    private DateTime createdAt = null;

    @SerializedName("description")
    private String description = null;

    @SerializedName("device_execution_mode")
    private Integer deviceExecutionMode = null;

    @SerializedName("enrollment_mode")
    private Boolean enrollmentMode = null;

    @SerializedName("etag")
    private String etag = null;

    @SerializedName("id")
    private String id = null;

    @SerializedName("issuer")
    private String issuer = null;

    @SerializedName("name")
    private String name = null;

    /**
     * Entity name: always &#39;trusted-cert&#39;
     */
    @JsonAdapter(ObjectEnum.Adapter.class)
    public enum ObjectEnum {
        CERT("trusted-cert");

        private String value;

        ObjectEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static ObjectEnum fromValue(String text) {
            for (ObjectEnum b : ObjectEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<ObjectEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final ObjectEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public ObjectEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return ObjectEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("object")
    private ObjectEnum object = null;

    @SerializedName("owner_id")
    private String ownerId = null;

    /**
     * Service name where the certificate is used.
     */
    @JsonAdapter(ServiceEnum.Adapter.class)
    public enum ServiceEnum {
        LWM2M("lwm2m"),

        BOOTSTRAP("bootstrap");

        private String value;

        ServiceEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static ServiceEnum fromValue(String text) {
            for (ServiceEnum b : ServiceEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<ServiceEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final ServiceEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public ServiceEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return ServiceEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("service")
    private ServiceEnum service = null;

    /**
     * Status of the certificate.
     */
    @JsonAdapter(StatusEnum.Adapter.class)
    public enum StatusEnum {
        ACTIVE("ACTIVE"),

        INACTIVE("INACTIVE");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static StatusEnum fromValue(String text) {
            for (StatusEnum b : StatusEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<StatusEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public StatusEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return StatusEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("status")
    private StatusEnum status = null;

    @SerializedName("subject")
    private String subject = null;

    @SerializedName("updated_at")
    private DateTime updatedAt = null;

    @SerializedName("valid")
    private Boolean valid = null;

    @SerializedName("validity")
    private DateTime validity = null;

    public TrustedCertificateResp accountId(String accountId) {
        this.accountId = accountId;
        return this;
    }

    /**
     * The ID of the account.
     * 
     * @return accountId
     **/
    @ApiModelProperty(example = "01619571e2e90242ac12000600000000", required = true, value = "The ID of the account.")
    public String getAccountId() {
        return accountId;
    }

    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    public TrustedCertificateResp certificate(String certificate) {
        this.certificate = certificate;
        return this;
    }

    /**
     * X509.v3 trusted certificate in PEM format.
     * 
     * @return certificate
     **/
    @ApiModelProperty(example = "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----", required = true,
                      value = "X509.v3 trusted certificate in PEM format.")
    public String getCertificate() {
        return certificate;
    }

    public void setCertificate(String certificate) {
        this.certificate = certificate;
    }

    public TrustedCertificateResp certificateFingerprint(String certificateFingerprint) {
        this.certificateFingerprint = certificateFingerprint;
        return this;
    }

    /**
     * A SHA-256 fingerprint of the certificate.
     * 
     * @return certificateFingerprint
     **/
    @ApiModelProperty(example = "a10fb2c8ba90e6de927bd0ae391dcc38f6115685de2d7024712af37ead0608f1", required = true,
                      value = "A SHA-256 fingerprint of the certificate.")
    public String getCertificateFingerprint() {
        return certificateFingerprint;
    }

    public void setCertificateFingerprint(String certificateFingerprint) {
        this.certificateFingerprint = certificateFingerprint;
    }

    public TrustedCertificateResp createdAt(DateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Creation UTC time RFC3339.
     * 
     * @return createdAt
     **/
    @ApiModelProperty(example = "2018-02-13T09:35:20Z", value = "Creation UTC time RFC3339.")
    public DateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(DateTime createdAt) {
        this.createdAt = createdAt;
    }

    public TrustedCertificateResp description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Human readable description of this certificate.
     * 
     * @return description
     **/
    @ApiModelProperty(example = "Certificate created by me.", value = "Human readable description of this certificate.")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public TrustedCertificateResp deviceExecutionMode(Integer deviceExecutionMode) {
        this.deviceExecutionMode = deviceExecutionMode;
        return this;
    }

    /**
     * Device execution mode where 1 means a developer certificate.
     * 
     * @return deviceExecutionMode
     **/
    @ApiModelProperty(example = "1", value = "Device execution mode where 1 means a developer certificate.")
    public Integer getDeviceExecutionMode() {
        return deviceExecutionMode;
    }

    public void setDeviceExecutionMode(Integer deviceExecutionMode) {
        this.deviceExecutionMode = deviceExecutionMode;
    }

    public TrustedCertificateResp enrollmentMode(Boolean enrollmentMode) {
        this.enrollmentMode = enrollmentMode;
        return this;
    }

    /**
     * DEPRECATED: Certificate is used in enrollment mode. Default value is false.
     * 
     * @return enrollmentMode
     **/
    @ApiModelProperty(example = "false",
                      value = "DEPRECATED: Certificate is used in enrollment mode. Default value is false.")
    public Boolean isEnrollmentMode() {
        return enrollmentMode;
    }

    public void setEnrollmentMode(Boolean enrollmentMode) {
        this.enrollmentMode = enrollmentMode;
    }

    public TrustedCertificateResp etag(String etag) {
        this.etag = etag;
        return this;
    }

    /**
     * API resource entity version.
     * 
     * @return etag
     **/
    @ApiModelProperty(example = "1", required = true, value = "API resource entity version.")
    public String getEtag() {
        return etag;
    }

    public void setEtag(String etag) {
        this.etag = etag;
    }

    public TrustedCertificateResp id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Entity ID.
     * 
     * @return id
     **/
    @ApiModelProperty(example = "01619571d01d0242ac12000600000000", required = true, value = "Entity ID.")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public TrustedCertificateResp issuer(String issuer) {
        this.issuer = issuer;
        return this;
    }

    /**
     * Issuer of the certificate.
     * 
     * @return issuer
     **/
    @ApiModelProperty(example = "CN=issuer", required = true, value = "Issuer of the certificate.")
    public String getIssuer() {
        return issuer;
    }

    public void setIssuer(String issuer) {
        this.issuer = issuer;
    }

    public TrustedCertificateResp name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Certificate name.
     * 
     * @return name
     **/
    @ApiModelProperty(example = "My certificate", required = true, value = "Certificate name.")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public TrustedCertificateResp object(ObjectEnum object) {
        this.object = object;
        return this;
    }

    /**
     * Entity name: always &#39;trusted-cert&#39;
     * 
     * @return object
     **/
    @ApiModelProperty(required = true, value = "Entity name: always 'trusted-cert'")
    public ObjectEnum getObject() {
        return object;
    }

    public void setObject(ObjectEnum object) {
        this.object = object;
    }

    public TrustedCertificateResp ownerId(String ownerId) {
        this.ownerId = ownerId;
        return this;
    }

    /**
     * The ID of the owner.
     * 
     * @return ownerId
     **/
    @ApiModelProperty(example = "01619571dad80242ac12000600000000", value = "The ID of the owner.")
    public String getOwnerId() {
        return ownerId;
    }

    public void setOwnerId(String ownerId) {
        this.ownerId = ownerId;
    }

    public TrustedCertificateResp service(ServiceEnum service) {
        this.service = service;
        return this;
    }

    /**
     * Service name where the certificate is used.
     * 
     * @return service
     **/
    @ApiModelProperty(required = true, value = "Service name where the certificate is used.")
    public ServiceEnum getService() {
        return service;
    }

    public void setService(ServiceEnum service) {
        this.service = service;
    }

    public TrustedCertificateResp status(StatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * Status of the certificate.
     * 
     * @return status
     **/
    @ApiModelProperty(example = "ACTIVE", value = "Status of the certificate.")
    public StatusEnum getStatus() {
        return status;
    }

    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    public TrustedCertificateResp subject(String subject) {
        this.subject = subject;
        return this;
    }

    /**
     * Subject of the certificate.
     * 
     * @return subject
     **/
    @ApiModelProperty(example = "CN=subject", required = true, value = "Subject of the certificate.")
    public String getSubject() {
        return subject;
    }

    public void setSubject(String subject) {
        this.subject = subject;
    }

    public TrustedCertificateResp updatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Last update UTC time RFC3339.
     * 
     * @return updatedAt
     **/
    @ApiModelProperty(example = "2018-02-14T15:24:14Z", value = "Last update UTC time RFC3339.")
    public DateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * This read-only flag indicates whether the certificate is valid or not.
     * 
     * @return valid
     **/
    @ApiModelProperty(example = "true",
                      value = "This read-only flag indicates whether the certificate is valid or not.")
    public Boolean isValid() {
        return valid;
    }

    public TrustedCertificateResp validity(DateTime validity) {
        this.validity = validity;
        return this;
    }

    /**
     * Expiration time in UTC formatted as RFC3339.
     * 
     * @return validity
     **/
    @ApiModelProperty(example = "2038-02-14T15:24:14Z", required = true,
                      value = "Expiration time in UTC formatted as RFC3339.")
    public DateTime getValidity() {
        return validity;
    }

    public void setValidity(DateTime validity) {
        this.validity = validity;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TrustedCertificateResp trustedCertificateResp = (TrustedCertificateResp) o;
        return Objects.equals(this.accountId, trustedCertificateResp.accountId)
               && Objects.equals(this.certificate, trustedCertificateResp.certificate)
               && Objects.equals(this.certificateFingerprint, trustedCertificateResp.certificateFingerprint)
               && Objects.equals(this.createdAt, trustedCertificateResp.createdAt)
               && Objects.equals(this.description, trustedCertificateResp.description)
               && Objects.equals(this.deviceExecutionMode, trustedCertificateResp.deviceExecutionMode)
               && Objects.equals(this.enrollmentMode, trustedCertificateResp.enrollmentMode)
               && Objects.equals(this.etag, trustedCertificateResp.etag)
               && Objects.equals(this.id, trustedCertificateResp.id)
               && Objects.equals(this.issuer, trustedCertificateResp.issuer)
               && Objects.equals(this.name, trustedCertificateResp.name)
               && Objects.equals(this.object, trustedCertificateResp.object)
               && Objects.equals(this.ownerId, trustedCertificateResp.ownerId)
               && Objects.equals(this.service, trustedCertificateResp.service)
               && Objects.equals(this.status, trustedCertificateResp.status)
               && Objects.equals(this.subject, trustedCertificateResp.subject)
               && Objects.equals(this.updatedAt, trustedCertificateResp.updatedAt)
               && Objects.equals(this.valid, trustedCertificateResp.valid)
               && Objects.equals(this.validity, trustedCertificateResp.validity);
    }

    @Override
    public int hashCode() {
        return Objects.hash(accountId, certificate, certificateFingerprint, createdAt, description, deviceExecutionMode,
                            enrollmentMode, etag, id, issuer, name, object, ownerId, service, status, subject,
                            updatedAt, valid, validity);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TrustedCertificateResp {\n");

        sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
        sb.append("    certificate: ").append(toIndentedString(certificate)).append("\n");
        sb.append("    certificateFingerprint: ").append(toIndentedString(certificateFingerprint)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    deviceExecutionMode: ").append(toIndentedString(deviceExecutionMode)).append("\n");
        sb.append("    enrollmentMode: ").append(toIndentedString(enrollmentMode)).append("\n");
        sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    object: ").append(toIndentedString(object)).append("\n");
        sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
        sb.append("    service: ").append(toIndentedString(service)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
        sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
