/*
 * Pelion Device Management API
 * Pelion Device Management API build from the publicly defined API definitions.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.joda.time.DateTime;
import java.io.Serializable;

/**
 * Represents an account in requests and responses.
 */
@ApiModel(description = "Represents an account in requests and responses.")

public class AccountInfo implements Serializable {
    private static final long serialVersionUID = 1L;

    @SerializedName("address_line1")
    private String addressLine1 = null;

    @SerializedName("address_line2")
    private String addressLine2 = null;

    @SerializedName("aliases")
    private List<String> aliases = null;

    @SerializedName("business_model")
    private BusinessModel businessModel = null;

    @SerializedName("business_model_history")
    private List<BusinessModelHistory> businessModelHistory = null;

    @SerializedName("city")
    private String city = null;

    @SerializedName("company")
    private String company = null;

    @SerializedName("contact")
    private String contact = null;

    @SerializedName("contract_number")
    private String contractNumber = null;

    @SerializedName("country")
    private String country = null;

    @SerializedName("created_at")
    private DateTime createdAt = null;

    @SerializedName("custom_fields")
    private Map<String, String> customFields = null;

    @SerializedName("customer_number")
    private String customerNumber = null;

    @SerializedName("display_name")
    private String displayName = null;

    @SerializedName("email")
    private String email = null;

    @SerializedName("end_market")
    private String endMarket = null;

    @SerializedName("etag")
    private String etag = null;

    @SerializedName("expiration")
    private DateTime expiration = null;

    @SerializedName("expiration_warning_threshold")
    private Integer expirationWarningThreshold = null;

    @SerializedName("id")
    private String id = null;

    @SerializedName("idle_timeout")
    private Integer idleTimeout = null;

    @SerializedName("limitations")
    private List<AccountLimitation> limitations = null;

    @SerializedName("limits")
    private Map<String, String> limits = null;

    /**
     * The enforcement status of multi-factor authentication, either &#x60;enforced&#x60; or &#x60;optional&#x60;.
     */
    @JsonAdapter(MfaStatusEnum.Adapter.class)
    public enum MfaStatusEnum {
        ENFORCED("enforced"),

        OPTIONAL("optional");

        private String value;

        MfaStatusEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static MfaStatusEnum fromValue(String text) {
            for (MfaStatusEnum b : MfaStatusEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<MfaStatusEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final MfaStatusEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public MfaStatusEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return MfaStatusEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("mfa_status")
    private MfaStatusEnum mfaStatus = null;

    @SerializedName("notification_emails")
    private List<String> notificationEmails = null;

    /**
     * Entity name: always &#x60;account&#x60;.
     */
    @JsonAdapter(ObjectEnum.Adapter.class)
    public enum ObjectEnum {
        ACCOUNT("account");

        private String value;

        ObjectEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static ObjectEnum fromValue(String text) {
            for (ObjectEnum b : ObjectEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<ObjectEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final ObjectEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public ObjectEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return ObjectEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("object")
    private ObjectEnum object = null;

    @SerializedName("parent_account")
    private ParentAccountInfo parentAccount = null;

    @SerializedName("parent_id")
    private String parentId = null;

    @SerializedName("password_policy")
    private PasswordPolicy passwordPolicy = null;

    @SerializedName("password_recovery_expiration")
    private Integer passwordRecoveryExpiration = null;

    @SerializedName("phone_number")
    private String phoneNumber = null;

    @SerializedName("policies")
    private List<FeaturePolicy> policies = null;

    @SerializedName("postal_code")
    private String postalCode = null;

    @SerializedName("reason")
    private String reason = null;

    @SerializedName("reference_note")
    private String referenceNote = null;

    @SerializedName("sales_contact")
    private String salesContact = null;

    @SerializedName("state")
    private String state = null;

    /**
     * The status of the account.
     */
    @JsonAdapter(StatusEnum.Adapter.class)
    public enum StatusEnum {
        ENROLLING("ENROLLING"),

        ACTIVE("ACTIVE"),

        RESTRICTED("RESTRICTED"),

        SUSPENDED("SUSPENDED");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static StatusEnum fromValue(String text) {
            for (StatusEnum b : StatusEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<StatusEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public StatusEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return StatusEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("status")
    private StatusEnum status = null;

    @SerializedName("sub_accounts")
    private List<AccountInfo> subAccounts = null;

    @SerializedName("template_id")
    private String templateId = null;

    @SerializedName("tier")
    private String tier = null;

    @SerializedName("tier_history")
    private List<TierHistory> tierHistory = null;

    @SerializedName("updated_at")
    private DateTime updatedAt = null;

    @SerializedName("upgraded_at")
    private DateTime upgradedAt = null;

    public AccountInfo addressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
        return this;
    }

    /**
     * Postal address line 1.
     * 
     * @return addressLine1
     **/
    @ApiModelProperty(example = "110 Fulbourn Rd", value = "Postal address line 1.")
    public String getAddressLine1() {
        return addressLine1;
    }

    public void setAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
    }

    public AccountInfo addressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
        return this;
    }

    /**
     * Postal address line 2.
     * 
     * @return addressLine2
     **/
    @ApiModelProperty(example = " ", value = "Postal address line 2.")
    public String getAddressLine2() {
        return addressLine2;
    }

    public void setAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
    }

    public AccountInfo aliases(List<String> aliases) {
        this.aliases = aliases;
        return this;
    }

    public AccountInfo addAliasesItem(String aliasesItem) {
        if (this.aliases == null) {
            this.aliases = new ArrayList<String>();
        }
        this.aliases.add(aliasesItem);
        return this;
    }

    /**
     * An array of aliases for the tenant account ID. The aliases must be globally unique.
     * 
     * @return aliases
     **/
    @ApiModelProperty(value = "An array of aliases for the tenant account ID. The aliases must be globally unique.")
    public List<String> getAliases() {
        return aliases;
    }

    public void setAliases(List<String> aliases) {
        this.aliases = aliases;
    }

    public AccountInfo businessModel(BusinessModel businessModel) {
        this.businessModel = businessModel;
        return this;
    }

    /**
     * Get businessModel
     * 
     * @return businessModel
     **/
    @ApiModelProperty(value = "")
    public BusinessModel getBusinessModel() {
        return businessModel;
    }

    public void setBusinessModel(BusinessModel businessModel) {
        this.businessModel = businessModel;
    }

    public AccountInfo businessModelHistory(List<BusinessModelHistory> businessModelHistory) {
        this.businessModelHistory = businessModelHistory;
        return this;
    }

    public AccountInfo addBusinessModelHistoryItem(BusinessModelHistory businessModelHistoryItem) {
        if (this.businessModelHistory == null) {
            this.businessModelHistory = new ArrayList<BusinessModelHistory>();
        }
        this.businessModelHistory.add(businessModelHistoryItem);
        return this;
    }

    /**
     * Business model history for this account.
     * 
     * @return businessModelHistory
     **/
    @ApiModelProperty(value = "Business model history for this account.")
    public List<BusinessModelHistory> getBusinessModelHistory() {
        return businessModelHistory;
    }

    public void setBusinessModelHistory(List<BusinessModelHistory> businessModelHistory) {
        this.businessModelHistory = businessModelHistory;
    }

    public AccountInfo city(String city) {
        this.city = city;
        return this;
    }

    /**
     * The city part of the postal address.
     * 
     * @return city
     **/
    @ApiModelProperty(example = "Cambridge", value = "The city part of the postal address.")
    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public AccountInfo company(String company) {
        this.company = company;
        return this;
    }

    /**
     * The name of the company used in billing.
     * 
     * @return company
     **/
    @ApiModelProperty(example = "ARM Holdings Plc", value = "The name of the company used in billing.")
    public String getCompany() {
        return company;
    }

    public void setCompany(String company) {
        this.company = company;
    }

    public AccountInfo contact(String contact) {
        this.contact = contact;
        return this;
    }

    /**
     * The name of the contact person for this account.
     * 
     * @return contact
     **/
    @ApiModelProperty(example = "J. Doe", value = "The name of the contact person for this account.")
    public String getContact() {
        return contact;
    }

    public void setContact(String contact) {
        this.contact = contact;
    }

    public AccountInfo contractNumber(String contractNumber) {
        this.contractNumber = contractNumber;
        return this;
    }

    /**
     * Contract number of the customer.
     * 
     * @return contractNumber
     **/
    @ApiModelProperty(example = "1NX25_0001", value = "Contract number of the customer.")
    public String getContractNumber() {
        return contractNumber;
    }

    public void setContractNumber(String contractNumber) {
        this.contractNumber = contractNumber;
    }

    public AccountInfo country(String country) {
        this.country = country;
        return this;
    }

    /**
     * The country part of the postal address.
     * 
     * @return country
     **/
    @ApiModelProperty(example = "United Kingdom", value = "The country part of the postal address.")
    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public AccountInfo createdAt(DateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Creation UTC time RFC3339.
     * 
     * @return createdAt
     **/
    @ApiModelProperty(example = "2018-02-13T09:35:20Z", value = "Creation UTC time RFC3339.")
    public DateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(DateTime createdAt) {
        this.createdAt = createdAt;
    }

    public AccountInfo customFields(Map<String, String> customFields) {
        this.customFields = customFields;
        return this;
    }

    public AccountInfo putCustomFieldsItem(String key, String customFieldsItem) {
        if (this.customFields == null) {
            this.customFields = new HashMap<String, String>();
        }
        this.customFields.put(key, customFieldsItem);
        return this;
    }

    /**
     * Account&#39;s custom properties as key-value pairs.
     * 
     * @return customFields
     **/
    @ApiModelProperty(value = "Account's custom properties as key-value pairs.")
    public Map<String, String> getCustomFields() {
        return customFields;
    }

    public void setCustomFields(Map<String, String> customFields) {
        this.customFields = customFields;
    }

    public AccountInfo customerNumber(String customerNumber) {
        this.customerNumber = customerNumber;
        return this;
    }

    /**
     * Customer number of the customer.
     * 
     * @return customerNumber
     **/
    @ApiModelProperty(example = "1NC25_0001", value = "Customer number of the customer.")
    public String getCustomerNumber() {
        return customerNumber;
    }

    public void setCustomerNumber(String customerNumber) {
        this.customerNumber = customerNumber;
    }

    public AccountInfo displayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * The display name for the tenant account.
     * 
     * @return displayName
     **/
    @ApiModelProperty(example = "ARM", value = "The display name for the tenant account.")
    public String getDisplayName() {
        return displayName;
    }

    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    public AccountInfo email(String email) {
        this.email = email;
        return this;
    }

    /**
     * The company email address for this account.
     * 
     * @return email
     **/
    @ApiModelProperty(example = "info@arm.com", value = "The company email address for this account.")
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public AccountInfo endMarket(String endMarket) {
        this.endMarket = endMarket;
        return this;
    }

    /**
     * Account end market.
     * 
     * @return endMarket
     **/
    @ApiModelProperty(example = "IT", required = true, value = "Account end market.")
    public String getEndMarket() {
        return endMarket;
    }

    public void setEndMarket(String endMarket) {
        this.endMarket = endMarket;
    }

    public AccountInfo etag(String etag) {
        this.etag = etag;
        return this;
    }

    /**
     * API resource entity version.
     * 
     * @return etag
     **/
    @ApiModelProperty(example = "1", required = true, value = "API resource entity version.")
    public String getEtag() {
        return etag;
    }

    public void setEtag(String etag) {
        this.etag = etag;
    }

    public AccountInfo expiration(DateTime expiration) {
        this.expiration = expiration;
        return this;
    }

    /**
     * Expiration time of the account, as UTC time RFC3339.
     * 
     * @return expiration
     **/
    @ApiModelProperty(value = "Expiration time of the account, as UTC time RFC3339.")
    public DateTime getExpiration() {
        return expiration;
    }

    public void setExpiration(DateTime expiration) {
        this.expiration = expiration;
    }

    public AccountInfo expirationWarningThreshold(Integer expirationWarningThreshold) {
        this.expirationWarningThreshold = expirationWarningThreshold;
        return this;
    }

    /**
     * Indicates how many days (1-180) before account expiration a notification email is sent. minimum: 1 maximum: 180
     * 
     * @return expirationWarningThreshold
     **/
    @ApiModelProperty(example = "180",
                      value = "Indicates how many days (1-180) before account expiration a notification email is sent.")
    public Integer getExpirationWarningThreshold() {
        return expirationWarningThreshold;
    }

    public void setExpirationWarningThreshold(Integer expirationWarningThreshold) {
        this.expirationWarningThreshold = expirationWarningThreshold;
    }

    public AccountInfo id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Account ID.
     * 
     * @return id
     **/
    @ApiModelProperty(example = "01619571e2e90242ac12000600000000", required = true, value = "Account ID.")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public AccountInfo idleTimeout(Integer idleTimeout) {
        this.idleTimeout = idleTimeout;
        return this;
    }

    /**
     * The reference token expiration time, in minutes, for this account. minimum: 1 maximum: 120
     * 
     * @return idleTimeout
     **/
    @ApiModelProperty(example = "30", value = "The reference token expiration time, in minutes, for this account.")
    public Integer getIdleTimeout() {
        return idleTimeout;
    }

    public void setIdleTimeout(Integer idleTimeout) {
        this.idleTimeout = idleTimeout;
    }

    public AccountInfo limitations(List<AccountLimitation> limitations) {
        this.limitations = limitations;
        return this;
    }

    public AccountInfo addLimitationsItem(AccountLimitation limitationsItem) {
        if (this.limitations == null) {
            this.limitations = new ArrayList<AccountLimitation>();
        }
        this.limitations.add(limitationsItem);
        return this;
    }

    /**
     * List of account limitation objects.
     * 
     * @return limitations
     **/
    @ApiModelProperty(value = "List of account limitation objects.")
    public List<AccountLimitation> getLimitations() {
        return limitations;
    }

    public void setLimitations(List<AccountLimitation> limitations) {
        this.limitations = limitations;
    }

    public AccountInfo limits(Map<String, String> limits) {
        this.limits = limits;
        return this;
    }

    public AccountInfo putLimitsItem(String key, String limitsItem) {
        if (this.limits == null) {
            this.limits = new HashMap<String, String>();
        }
        this.limits.put(key, limitsItem);
        return this;
    }

    /**
     * DEPRECATED: Replaced by the limitations parameter.
     * 
     * @return limits
     **/
    @ApiModelProperty(value = "DEPRECATED: Replaced by the limitations parameter.")
    public Map<String, String> getLimits() {
        return limits;
    }

    public void setLimits(Map<String, String> limits) {
        this.limits = limits;
    }

    public AccountInfo mfaStatus(MfaStatusEnum mfaStatus) {
        this.mfaStatus = mfaStatus;
        return this;
    }

    /**
     * The enforcement status of multi-factor authentication, either &#x60;enforced&#x60; or &#x60;optional&#x60;.
     * 
     * @return mfaStatus
     **/
    @ApiModelProperty(value = "The enforcement status of multi-factor authentication, either `enforced` or `optional`.")
    public MfaStatusEnum getMfaStatus() {
        return mfaStatus;
    }

    public void setMfaStatus(MfaStatusEnum mfaStatus) {
        this.mfaStatus = mfaStatus;
    }

    public AccountInfo notificationEmails(List<String> notificationEmails) {
        this.notificationEmails = notificationEmails;
        return this;
    }

    public AccountInfo addNotificationEmailsItem(String notificationEmailsItem) {
        if (this.notificationEmails == null) {
            this.notificationEmails = new ArrayList<String>();
        }
        this.notificationEmails.add(notificationEmailsItem);
        return this;
    }

    /**
     * A list of notification email addresses.
     * 
     * @return notificationEmails
     **/
    @ApiModelProperty(value = "A list of notification email addresses.")
    public List<String> getNotificationEmails() {
        return notificationEmails;
    }

    public void setNotificationEmails(List<String> notificationEmails) {
        this.notificationEmails = notificationEmails;
    }

    public AccountInfo object(ObjectEnum object) {
        this.object = object;
        return this;
    }

    /**
     * Entity name: always &#x60;account&#x60;.
     * 
     * @return object
     **/
    @ApiModelProperty(required = true, value = "Entity name: always `account`.")
    public ObjectEnum getObject() {
        return object;
    }

    public void setObject(ObjectEnum object) {
        this.object = object;
    }

    public AccountInfo parentAccount(ParentAccountInfo parentAccount) {
        this.parentAccount = parentAccount;
        return this;
    }

    /**
     * Contact details of the parent account.
     * 
     * @return parentAccount
     **/
    @ApiModelProperty(value = "Contact details of the parent account.")
    public ParentAccountInfo getParentAccount() {
        return parentAccount;
    }

    public void setParentAccount(ParentAccountInfo parentAccount) {
        this.parentAccount = parentAccount;
    }

    public AccountInfo parentId(String parentId) {
        this.parentId = parentId;
        return this;
    }

    /**
     * The ID of the parent account, if any.
     * 
     * @return parentId
     **/
    @ApiModelProperty(example = "01619571dad80242ac12000600000000", value = "The ID of the parent account, if any.")
    public String getParentId() {
        return parentId;
    }

    public void setParentId(String parentId) {
        this.parentId = parentId;
    }

    public AccountInfo passwordPolicy(PasswordPolicy passwordPolicy) {
        this.passwordPolicy = passwordPolicy;
        return this;
    }

    /**
     * The password policy for this account.
     * 
     * @return passwordPolicy
     **/
    @ApiModelProperty(value = "The password policy for this account.")
    public PasswordPolicy getPasswordPolicy() {
        return passwordPolicy;
    }

    public void setPasswordPolicy(PasswordPolicy passwordPolicy) {
        this.passwordPolicy = passwordPolicy;
    }

    public AccountInfo passwordRecoveryExpiration(Integer passwordRecoveryExpiration) {
        this.passwordRecoveryExpiration = passwordRecoveryExpiration;
        return this;
    }

    /**
     * Indicates for how many minutes a password recovery email is valid. minimum: 1 maximum: 45
     * 
     * @return passwordRecoveryExpiration
     **/
    @ApiModelProperty(value = "Indicates for how many minutes a password recovery email is valid.")
    public Integer getPasswordRecoveryExpiration() {
        return passwordRecoveryExpiration;
    }

    public void setPasswordRecoveryExpiration(Integer passwordRecoveryExpiration) {
        this.passwordRecoveryExpiration = passwordRecoveryExpiration;
    }

    public AccountInfo phoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }

    /**
     * The phone number of a company representative.
     * 
     * @return phoneNumber
     **/
    @ApiModelProperty(example = "+44 (1223) 400 400", value = "The phone number of a company representative.")
    public String getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    public AccountInfo policies(List<FeaturePolicy> policies) {
        this.policies = policies;
        return this;
    }

    public AccountInfo addPoliciesItem(FeaturePolicy policiesItem) {
        if (this.policies == null) {
            this.policies = new ArrayList<FeaturePolicy>();
        }
        this.policies.add(policiesItem);
        return this;
    }

    /**
     * List of policies if requested.
     * 
     * @return policies
     **/
    @ApiModelProperty(value = "List of policies if requested.")
    public List<FeaturePolicy> getPolicies() {
        return policies;
    }

    public void setPolicies(List<FeaturePolicy> policies) {
        this.policies = policies;
    }

    public AccountInfo postalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }

    /**
     * The postal code part of the postal address.
     * 
     * @return postalCode
     **/
    @ApiModelProperty(example = "CB1 9NJ", value = "The postal code part of the postal address.")
    public String getPostalCode() {
        return postalCode;
    }

    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    public AccountInfo reason(String reason) {
        this.reason = reason;
        return this;
    }

    /**
     * A note with the reason for account status update.
     * 
     * @return reason
     **/
    @ApiModelProperty(example = "Subscription paid.", value = "A note with the reason for account status update.")
    public String getReason() {
        return reason;
    }

    public void setReason(String reason) {
        this.reason = reason;
    }

    public AccountInfo referenceNote(String referenceNote) {
        this.referenceNote = referenceNote;
        return this;
    }

    /**
     * A reference note for updating the status of the account.
     * 
     * @return referenceNote
     **/
    @ApiModelProperty(example = "ARM-INT-0001", value = "A reference note for updating the status of the account.")
    public String getReferenceNote() {
        return referenceNote;
    }

    public void setReferenceNote(String referenceNote) {
        this.referenceNote = referenceNote;
    }

    public AccountInfo salesContact(String salesContact) {
        this.salesContact = salesContact;
        return this;
    }

    /**
     * Email address of the sales contact.
     * 
     * @return salesContact
     **/
    @ApiModelProperty(example = "sales@arm.com", value = "Email address of the sales contact.")
    public String getSalesContact() {
        return salesContact;
    }

    public void setSalesContact(String salesContact) {
        this.salesContact = salesContact;
    }

    public AccountInfo state(String state) {
        this.state = state;
        return this;
    }

    /**
     * The state part of the postal address.
     * 
     * @return state
     **/
    @ApiModelProperty(example = " ", value = "The state part of the postal address.")
    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    public AccountInfo status(StatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * The status of the account.
     * 
     * @return status
     **/
    @ApiModelProperty(example = "ACTIVE", required = true, value = "The status of the account.")
    public StatusEnum getStatus() {
        return status;
    }

    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    public AccountInfo subAccounts(List<AccountInfo> subAccounts) {
        this.subAccounts = subAccounts;
        return this;
    }

    public AccountInfo addSubAccountsItem(AccountInfo subAccountsItem) {
        if (this.subAccounts == null) {
            this.subAccounts = new ArrayList<AccountInfo>();
        }
        this.subAccounts.add(subAccountsItem);
        return this;
    }

    /**
     * List of sub accounts. Not available for developer users.
     * 
     * @return subAccounts
     **/
    @ApiModelProperty(value = "List of sub accounts. Not available for developer users.")
    public List<AccountInfo> getSubAccounts() {
        return subAccounts;
    }

    public void setSubAccounts(List<AccountInfo> subAccounts) {
        this.subAccounts = subAccounts;
    }

    public AccountInfo templateId(String templateId) {
        this.templateId = templateId;
        return this;
    }

    /**
     * Account template ID.
     * 
     * @return templateId
     **/
    @ApiModelProperty(example = "01619571e7160242ac12000600000000", value = "Account template ID.")
    public String getTemplateId() {
        return templateId;
    }

    public void setTemplateId(String templateId) {
        this.templateId = templateId;
    }

    public AccountInfo tier(String tier) {
        this.tier = tier;
        return this;
    }

    /**
     * The tier level of the account; &#x60;0&#x60;: free tier, &#x60;1&#x60;: commercial account, &#x60;2&#x60;:
     * partner tier. Other values are reserved for the future.
     * 
     * @return tier
     **/
    @ApiModelProperty(example = "1", required = true,
                      value = "The tier level of the account; `0`: free tier, `1`: commercial account, `2`: partner tier. Other values are reserved for the future.")
    public String getTier() {
        return tier;
    }

    public void setTier(String tier) {
        this.tier = tier;
    }

    public AccountInfo tierHistory(List<TierHistory> tierHistory) {
        this.tierHistory = tierHistory;
        return this;
    }

    public AccountInfo addTierHistoryItem(TierHistory tierHistoryItem) {
        if (this.tierHistory == null) {
            this.tierHistory = new ArrayList<TierHistory>();
        }
        this.tierHistory.add(tierHistoryItem);
        return this;
    }

    /**
     * Tier history for this account.
     * 
     * @return tierHistory
     **/
    @ApiModelProperty(value = "Tier history for this account.")
    public List<TierHistory> getTierHistory() {
        return tierHistory;
    }

    public void setTierHistory(List<TierHistory> tierHistory) {
        this.tierHistory = tierHistory;
    }

    public AccountInfo updatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Last update UTC time RFC3339.
     * 
     * @return updatedAt
     **/
    @ApiModelProperty(example = "2018-02-14T15:24:14Z", value = "Last update UTC time RFC3339.")
    public DateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public AccountInfo upgradedAt(DateTime upgradedAt) {
        this.upgradedAt = upgradedAt;
        return this;
    }

    /**
     * Time when upgraded to commercial account in UTC format RFC3339.
     * 
     * @return upgradedAt
     **/
    @ApiModelProperty(example = "2018-02-14T15:24:14Z",
                      value = "Time when upgraded to commercial account in UTC format RFC3339.")
    public DateTime getUpgradedAt() {
        return upgradedAt;
    }

    public void setUpgradedAt(DateTime upgradedAt) {
        this.upgradedAt = upgradedAt;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AccountInfo accountInfo = (AccountInfo) o;
        return Objects.equals(this.addressLine1, accountInfo.addressLine1)
               && Objects.equals(this.addressLine2, accountInfo.addressLine2)
               && Objects.equals(this.aliases, accountInfo.aliases)
               && Objects.equals(this.businessModel, accountInfo.businessModel)
               && Objects.equals(this.businessModelHistory, accountInfo.businessModelHistory)
               && Objects.equals(this.city, accountInfo.city) && Objects.equals(this.company, accountInfo.company)
               && Objects.equals(this.contact, accountInfo.contact)
               && Objects.equals(this.contractNumber, accountInfo.contractNumber)
               && Objects.equals(this.country, accountInfo.country)
               && Objects.equals(this.createdAt, accountInfo.createdAt)
               && Objects.equals(this.customFields, accountInfo.customFields)
               && Objects.equals(this.customerNumber, accountInfo.customerNumber)
               && Objects.equals(this.displayName, accountInfo.displayName)
               && Objects.equals(this.email, accountInfo.email) && Objects.equals(this.endMarket, accountInfo.endMarket)
               && Objects.equals(this.etag, accountInfo.etag) && Objects.equals(this.expiration, accountInfo.expiration)
               && Objects.equals(this.expirationWarningThreshold, accountInfo.expirationWarningThreshold)
               && Objects.equals(this.id, accountInfo.id) && Objects.equals(this.idleTimeout, accountInfo.idleTimeout)
               && Objects.equals(this.limitations, accountInfo.limitations)
               && Objects.equals(this.limits, accountInfo.limits)
               && Objects.equals(this.mfaStatus, accountInfo.mfaStatus)
               && Objects.equals(this.notificationEmails, accountInfo.notificationEmails)
               && Objects.equals(this.object, accountInfo.object)
               && Objects.equals(this.parentAccount, accountInfo.parentAccount)
               && Objects.equals(this.parentId, accountInfo.parentId)
               && Objects.equals(this.passwordPolicy, accountInfo.passwordPolicy)
               && Objects.equals(this.passwordRecoveryExpiration, accountInfo.passwordRecoveryExpiration)
               && Objects.equals(this.phoneNumber, accountInfo.phoneNumber)
               && Objects.equals(this.policies, accountInfo.policies)
               && Objects.equals(this.postalCode, accountInfo.postalCode)
               && Objects.equals(this.reason, accountInfo.reason)
               && Objects.equals(this.referenceNote, accountInfo.referenceNote)
               && Objects.equals(this.salesContact, accountInfo.salesContact)
               && Objects.equals(this.state, accountInfo.state) && Objects.equals(this.status, accountInfo.status)
               && Objects.equals(this.subAccounts, accountInfo.subAccounts)
               && Objects.equals(this.templateId, accountInfo.templateId) && Objects.equals(this.tier, accountInfo.tier)
               && Objects.equals(this.tierHistory, accountInfo.tierHistory)
               && Objects.equals(this.updatedAt, accountInfo.updatedAt)
               && Objects.equals(this.upgradedAt, accountInfo.upgradedAt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(addressLine1, addressLine2, aliases, businessModel, businessModelHistory, city, company,
                            contact, contractNumber, country, createdAt, customFields, customerNumber, displayName,
                            email, endMarket, etag, expiration, expirationWarningThreshold, id, idleTimeout,
                            limitations, limits, mfaStatus, notificationEmails, object, parentAccount, parentId,
                            passwordPolicy, passwordRecoveryExpiration, phoneNumber, policies, postalCode, reason,
                            referenceNote, salesContact, state, status, subAccounts, templateId, tier, tierHistory,
                            updatedAt, upgradedAt);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AccountInfo {\n");

        sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
        sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
        sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
        sb.append("    businessModel: ").append(toIndentedString(businessModel)).append("\n");
        sb.append("    businessModelHistory: ").append(toIndentedString(businessModelHistory)).append("\n");
        sb.append("    city: ").append(toIndentedString(city)).append("\n");
        sb.append("    company: ").append(toIndentedString(company)).append("\n");
        sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
        sb.append("    contractNumber: ").append(toIndentedString(contractNumber)).append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
        sb.append("    customerNumber: ").append(toIndentedString(customerNumber)).append("\n");
        sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
        sb.append("    email: ").append(toIndentedString(email)).append("\n");
        sb.append("    endMarket: ").append(toIndentedString(endMarket)).append("\n");
        sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
        sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
        sb.append("    expirationWarningThreshold: ").append(toIndentedString(expirationWarningThreshold)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    idleTimeout: ").append(toIndentedString(idleTimeout)).append("\n");
        sb.append("    limitations: ").append(toIndentedString(limitations)).append("\n");
        sb.append("    limits: ").append(toIndentedString(limits)).append("\n");
        sb.append("    mfaStatus: ").append(toIndentedString(mfaStatus)).append("\n");
        sb.append("    notificationEmails: ").append(toIndentedString(notificationEmails)).append("\n");
        sb.append("    object: ").append(toIndentedString(object)).append("\n");
        sb.append("    parentAccount: ").append(toIndentedString(parentAccount)).append("\n");
        sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
        sb.append("    passwordPolicy: ").append(toIndentedString(passwordPolicy)).append("\n");
        sb.append("    passwordRecoveryExpiration: ").append(toIndentedString(passwordRecoveryExpiration)).append("\n");
        sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
        sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
        sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
        sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
        sb.append("    referenceNote: ").append(toIndentedString(referenceNote)).append("\n");
        sb.append("    salesContact: ").append(toIndentedString(salesContact)).append("\n");
        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    subAccounts: ").append(toIndentedString(subAccounts)).append("\n");
        sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
        sb.append("    tier: ").append(toIndentedString(tier)).append("\n");
        sb.append("    tierHistory: ").append(toIndentedString(tierHistory)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    upgradedAt: ").append(toIndentedString(upgradedAt)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
