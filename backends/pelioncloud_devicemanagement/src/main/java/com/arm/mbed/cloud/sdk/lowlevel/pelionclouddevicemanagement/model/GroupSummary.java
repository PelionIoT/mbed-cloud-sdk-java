/*
 * Pelion Device Management API
 * Pelion Device Management API build from the publicly defined API definitions.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.joda.time.DateTime;
import java.io.Serializable;

/**
 * This object contains basic information about groups.
 */
@ApiModel(description = "This object contains basic information about groups.")

public class GroupSummary implements Serializable {
    private static final long serialVersionUID = 1L;

    @SerializedName("account_id")
    private String accountId = null;

    @SerializedName("apikey_count")
    private Integer apikeyCount = null;

    @SerializedName("application_count")
    private Integer applicationCount = null;

    @SerializedName("created_at")
    private DateTime createdAt = null;

    @SerializedName("etag")
    private String etag = null;

    @SerializedName("id")
    private String id = null;

    @SerializedName("name")
    private String name = null;

    /**
     * Entity name: always &#x60;group&#x60;.
     */
    @JsonAdapter(ObjectEnum.Adapter.class)
    public enum ObjectEnum {
        GROUP("group");

        private String value;

        ObjectEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static ObjectEnum fromValue(String text) {
            for (ObjectEnum b : ObjectEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<ObjectEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final ObjectEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public ObjectEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return ObjectEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("object")
    private ObjectEnum object = null;

    @SerializedName("updated_at")
    private DateTime updatedAt = null;

    @SerializedName("user_count")
    private Integer userCount = null;

    public GroupSummary accountId(String accountId) {
        this.accountId = accountId;
        return this;
    }

    /**
     * The ID of the account this group belongs to.
     * 
     * @return accountId
     **/
    @ApiModelProperty(example = "01619571e2e90242ac12000600000000", required = true,
                      value = "The ID of the account this group belongs to.")
    public String getAccountId() {
        return accountId;
    }

    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    public GroupSummary apikeyCount(Integer apikeyCount) {
        this.apikeyCount = apikeyCount;
        return this;
    }

    /**
     * The number of API keys in this group.
     * 
     * @return apikeyCount
     **/
    @ApiModelProperty(example = "0", required = true, value = "The number of API keys in this group.")
    public Integer getApikeyCount() {
        return apikeyCount;
    }

    public void setApikeyCount(Integer apikeyCount) {
        this.apikeyCount = apikeyCount;
    }

    public GroupSummary applicationCount(Integer applicationCount) {
        this.applicationCount = applicationCount;
        return this;
    }

    /**
     * The number of applications in this group.
     * 
     * @return applicationCount
     **/
    @ApiModelProperty(example = "0", value = "The number of applications in this group.")
    public Integer getApplicationCount() {
        return applicationCount;
    }

    public void setApplicationCount(Integer applicationCount) {
        this.applicationCount = applicationCount;
    }

    public GroupSummary createdAt(DateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Creation UTC time RFC3339.
     * 
     * @return createdAt
     **/
    @ApiModelProperty(example = "2018-02-13T09:35:20Z", value = "Creation UTC time RFC3339.")
    public DateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(DateTime createdAt) {
        this.createdAt = createdAt;
    }

    public GroupSummary etag(String etag) {
        this.etag = etag;
        return this;
    }

    /**
     * API resource entity version.
     * 
     * @return etag
     **/
    @ApiModelProperty(example = "1", required = true, value = "API resource entity version.")
    public String getEtag() {
        return etag;
    }

    public void setEtag(String etag) {
        this.etag = etag;
    }

    public GroupSummary id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The ID of the group.
     * 
     * @return id
     **/
    @ApiModelProperty(example = "01619571dec00242ac12000600000000", required = true, value = "The ID of the group.")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public GroupSummary name(String name) {
        this.name = name;
        return this;
    }

    /**
     * The name of the group.
     * 
     * @return name
     **/
    @ApiModelProperty(example = "Administrators", required = true, value = "The name of the group.")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public GroupSummary object(ObjectEnum object) {
        this.object = object;
        return this;
    }

    /**
     * Entity name: always &#x60;group&#x60;.
     * 
     * @return object
     **/
    @ApiModelProperty(required = true, value = "Entity name: always `group`.")
    public ObjectEnum getObject() {
        return object;
    }

    public void setObject(ObjectEnum object) {
        this.object = object;
    }

    public GroupSummary updatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Last update UTC time RFC3339.
     * 
     * @return updatedAt
     **/
    @ApiModelProperty(example = "2018-02-14T15:24:14Z", value = "Last update UTC time RFC3339.")
    public DateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public GroupSummary userCount(Integer userCount) {
        this.userCount = userCount;
        return this;
    }

    /**
     * The number of users in this group.
     * 
     * @return userCount
     **/
    @ApiModelProperty(example = "1", required = true, value = "The number of users in this group.")
    public Integer getUserCount() {
        return userCount;
    }

    public void setUserCount(Integer userCount) {
        this.userCount = userCount;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GroupSummary groupSummary = (GroupSummary) o;
        return Objects.equals(this.accountId, groupSummary.accountId)
               && Objects.equals(this.apikeyCount, groupSummary.apikeyCount)
               && Objects.equals(this.applicationCount, groupSummary.applicationCount)
               && Objects.equals(this.createdAt, groupSummary.createdAt) && Objects.equals(this.etag, groupSummary.etag)
               && Objects.equals(this.id, groupSummary.id) && Objects.equals(this.name, groupSummary.name)
               && Objects.equals(this.object, groupSummary.object)
               && Objects.equals(this.updatedAt, groupSummary.updatedAt)
               && Objects.equals(this.userCount, groupSummary.userCount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(accountId, apikeyCount, applicationCount, createdAt, etag, id, name, object, updatedAt,
                            userCount);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GroupSummary {\n");

        sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
        sb.append("    apikeyCount: ").append(toIndentedString(apikeyCount)).append("\n");
        sb.append("    applicationCount: ").append(toIndentedString(applicationCount)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    object: ").append(toIndentedString(object)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    userCount: ").append(toIndentedString(userCount)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
